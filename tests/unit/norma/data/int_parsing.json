[
  {
    "description": "cast(null as int) => null",
    "engines": [
      "pandas",
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": null
        }
      ],
      "schema": {
        "pandas": {
          "col": "string[python]"
        },
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col",
              "type": "void"
            }
          ]
        }
      }
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "integer"
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": null,
          "errors": {}
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col",
              "type": "integer"
            },
            {
              "name": "errors",
              "type": {
                "type": "map",
                "keyType": "string",
                "valueContainsNull": true,
                "valueType": {
                  "type": "struct",
                  "fields": [
                    {
                      "name": "details",
                      "type": {
                        "type": "array",
                        "containsNull": true,
                        "elementType": {
                          "type": "struct",
                          "fields": [
                            {
                              "name": "type",
                              "type": "string"
                            },
                            {
                              "name": "msg",
                              "type": "string"
                            }
                          ]
                        }
                      },
                      "nullable": false
                    },
                    {
                      "name": "original",
                      "type": "string"
                    }
                  ]
                }
              },
              "nullable": false
            }
          ]
        }
      }
    }
  },
  {
    "description": "cast(123 as int) => 123",
    "engines": [
      "pandas",
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": 123
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col",
              "type": "integer"
            }
          ]
        }
      }
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "integer"
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": 123,
          "errors": {}
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col",
              "type": "integer"
            },
            {
              "name": "errors",
              "type": {
                "type": "map",
                "keyType": "string",
                "valueContainsNull": true,
                "valueType": {
                  "type": "struct",
                  "fields": [
                    {
                      "name": "details",
                      "type": {
                        "type": "array",
                        "containsNull": true,
                        "elementType": {
                          "type": "struct",
                          "fields": [
                            {
                              "name": "type",
                              "type": "string"
                            },
                            {
                              "name": "msg",
                              "type": "string"
                            }
                          ]
                        }
                      },
                      "nullable": false
                    },
                    {
                      "name": "original",
                      "type": "string"
                    }
                  ]
                }
              },
              "nullable": false
            }
          ]
        }
      }
    }
  },
  {
    "description": "cast(123.45 as int) => 123",
    "engines": [
      "pandas",
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": 123.45
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col",
              "type": "float"
            }
          ]
        }
      }
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "integer"
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": 123,
          "errors": {}
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col",
              "type": "integer"
            },
            {
              "name": "errors",
              "type": {
                "type": "map",
                "keyType": "string",
                "valueContainsNull": true,
                "valueType": {
                  "type": "struct",
                  "fields": [
                    {
                      "name": "details",
                      "type": {
                        "type": "array",
                        "containsNull": true,
                        "elementType": {
                          "type": "struct",
                          "fields": [
                            {
                              "name": "type",
                              "type": "string"
                            },
                            {
                              "name": "msg",
                              "type": "string"
                            }
                          ]
                        }
                      },
                      "nullable": false
                    },
                    {
                      "name": "original",
                      "type": "string"
                    }
                  ]
                }
              },
              "nullable": false
            }
          ]
        }
      }
    }
  },
  {
    "description": "cast('123' as int) => 123",
    "engines": [
      "pandas",
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": "123"
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col",
              "type": "string"
            }
          ]
        }
      }
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "integer"
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": 123,
          "errors": {}
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col",
              "type": "integer"
            },
            {
              "name": "errors",
              "type": {
                "type": "map",
                "keyType": "string",
                "valueContainsNull": true,
                "valueType": {
                  "type": "struct",
                  "fields": [
                    {
                      "name": "details",
                      "type": {
                        "type": "array",
                        "containsNull": true,
                        "elementType": {
                          "type": "struct",
                          "fields": [
                            {
                              "name": "type",
                              "type": "string"
                            },
                            {
                              "name": "msg",
                              "type": "string"
                            }
                          ]
                        }
                      },
                      "nullable": false
                    },
                    {
                      "name": "original",
                      "type": "string"
                    }
                  ]
                }
              },
              "nullable": false
            }
          ]
        }
      }
    }
  },
  {
    "description": "cast('123.45' as int) => 123",
    "engines": [
      "pandas",
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": "123.45"
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col",
              "type": "string"
            }
          ]
        }
      }
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "integer"
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": 123,
          "errors": {}
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col",
              "type": "integer"
            },
            {
              "name": "errors",
              "type": {
                "type": "map",
                "keyType": "string",
                "valueContainsNull": true,
                "valueType": {
                  "type": "struct",
                  "fields": [
                    {
                      "name": "details",
                      "type": {
                        "type": "array",
                        "containsNull": true,
                        "elementType": {
                          "type": "struct",
                          "fields": [
                            {
                              "name": "type",
                              "type": "string"
                            },
                            {
                              "name": "msg",
                              "type": "string"
                            }
                          ]
                        }
                      },
                      "nullable": false
                    },
                    {
                      "name": "original",
                      "type": "string"
                    }
                  ]
                }
              },
              "nullable": false
            }
          ]
        }
      }
    }
  },
  {
    "description": "cast('foo' as int) => null, error is raised",
    "engines": [
      "pandas",
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": "foo"
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col",
              "type": "string"
            }
          ]
        }
      }
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "integer"
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": null,
          "errors": {
            "col": {
              "details": [
                {
                  "type": "int_parsing",
                  "msg": "Input should be a valid integer, unable to parse string as an integer"
                }
              ],
              "original": "\"foo\""
            }
          }
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col",
              "type": "integer"
            },
            {
              "name": "errors",
              "type": {
                "type": "map",
                "keyType": "string",
                "valueContainsNull": true,
                "valueType": {
                  "type": "struct",
                  "fields": [
                    {
                      "name": "details",
                      "type": {
                        "type": "array",
                        "containsNull": true,
                        "elementType": {
                          "type": "struct",
                          "fields": [
                            {
                              "name": "type",
                              "type": "string"
                            },
                            {
                              "name": "msg",
                              "type": "string"
                            }
                          ]
                        }
                      },
                      "nullable": false
                    },
                    {
                      "name": "original",
                      "type": "string"
                    }
                  ]
                }
              },
              "nullable": false
            }
          ]
        }
      }
    }
  },
  {
    "description": "cast(true as int) => 1",
    "engines": [
      "pandas",
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": true
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col",
              "type": "boolean"
            }
          ]
        }
      }
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "integer"
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": 1,
          "errors": {}
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col",
              "type": "integer"
            },
            {
              "name": "errors",
              "type": {
                "type": "map",
                "keyType": "string",
                "valueContainsNull": true,
                "valueType": {
                  "type": "struct",
                  "fields": [
                    {
                      "name": "details",
                      "type": {
                        "type": "array",
                        "containsNull": true,
                        "elementType": {
                          "type": "struct",
                          "fields": [
                            {
                              "name": "type",
                              "type": "string"
                            },
                            {
                              "name": "msg",
                              "type": "string"
                            }
                          ]
                        }
                      },
                      "nullable": false
                    },
                    {
                      "name": "original",
                      "type": "string"
                    }
                  ]
                }
              },
              "nullable": false
            }
          ]
        }
      }
    }
  },
  {
    "description": "cast(false as int) => 0",
    "engines": [
      "pandas",
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": false
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col",
              "type": "boolean"
            }
          ]
        }
      }
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "integer"
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": 0,
          "errors": {}
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col",
              "type": "integer"
            },
            {
              "name": "errors",
              "type": {
                "type": "map",
                "keyType": "string",
                "valueContainsNull": true,
                "valueType": {
                  "type": "struct",
                  "fields": [
                    {
                      "name": "details",
                      "type": {
                        "type": "array",
                        "containsNull": true,
                        "elementType": {
                          "type": "struct",
                          "fields": [
                            {
                              "name": "type",
                              "type": "string"
                            },
                            {
                              "name": "msg",
                              "type": "string"
                            }
                          ]
                        }
                      },
                      "nullable": false
                    },
                    {
                      "name": "original",
                      "type": "string"
                    }
                  ]
                }
              },
              "nullable": false
            }
          ]
        }
      }
    }
  },
  {
    "description": "cast({'foo':'bar'} as int) => null, error is raised",
    "engines": [
      "pandas",
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": {
            "foo": "bar"
          }
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col",
              "type": {
                "type": "map",
                "keyType": "string",
                "valueContainsNull": true,
                "valueType": "string"
              }
            }
          ]
        }
      }
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "integer"
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": null,
          "errors": {
            "col": {
              "details": [
                {
                  "type": "int_type",
                  "msg": "Input should be a valid integer"
                }
              ],
              "original": "{\"foo\":\"bar\"}"
            }
          }
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col",
              "type": "integer"
            },
            {
              "name": "errors",
              "type": {
                "type": "map",
                "keyType": "string",
                "valueContainsNull": true,
                "valueType": {
                  "type": "struct",
                  "fields": [
                    {
                      "name": "details",
                      "type": {
                        "type": "array",
                        "containsNull": true,
                        "elementType": {
                          "type": "struct",
                          "fields": [
                            {
                              "name": "type",
                              "type": "string"
                            },
                            {
                              "name": "msg",
                              "type": "string"
                            }
                          ]
                        }
                      },
                      "nullable": false
                    },
                    {
                      "name": "original",
                      "type": "string"
                    }
                  ]
                }
              },
              "nullable": false
            }
          ]
        }
      }
    }
  },
  {
    "description": "cast([1] as int) => null, error is raised",
    "engines": [
      "pandas",
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": [
            1
          ]
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col",
              "type": {
                "type": "array",
                "containsNull": true,
                "elementType": "integer"
              }
            }
          ]
        }
      }
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "integer"
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": null,
          "errors": {
            "col": {
              "details": [
                {
                  "type": "int_type",
                  "msg": "Input should be a valid integer"
                }
              ],
              "original": "[1]"
            }
          }
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col",
              "type": "integer"
            },
            {
              "name": "errors",
              "type": {
                "type": "map",
                "keyType": "string",
                "valueContainsNull": true,
                "valueType": {
                  "type": "struct",
                  "fields": [
                    {
                      "name": "details",
                      "type": {
                        "type": "array",
                        "containsNull": true,
                        "elementType": {
                          "type": "struct",
                          "fields": [
                            {
                              "name": "type",
                              "type": "string"
                            },
                            {
                              "name": "msg",
                              "type": "string"
                            }
                          ]
                        }
                      },
                      "nullable": false
                    },
                    {
                      "name": "original",
                      "type": "string"
                    }
                  ]
                }
              },
              "nullable": false
            }
          ]
        }
      }
    }
  },
  {
    "description": "cast(123, '456', {'foo':'bar'}, 'foo' as int) => [123, 456, null, null] error is raised",
    "engines": [
      "pandas"
    ],
    "given": {
      "data": [
        {
          "col": 123
        },
        {
          "col": "456"
        },
        {
          "col": {
            "foo": "bar"
          }
        },
        {
          "col": "foo"
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "integer"
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": 123,
          "errors": {}
        },
        {
          "col": 456,
          "errors": {}
        },
        {
          "col": null,
          "errors": {
            "col": {
              "details": [
                {
                  "type": "int_type",
                  "msg": "Input should be a valid integer"
                }
              ],
              "original": "{\"foo\":\"bar\"}"
            }
          }
        },
        {
          "col": null,
          "errors": {
            "col": {
              "details": [
                {
                  "type": "int_parsing",
                  "msg": "Input should be a valid integer, unable to parse string as an integer"
                }
              ],
              "original": "\"foo\""
            }
          }
        }
      ]
    }
  },
  {
    "description": "cast(null <Int64> as integer) => null",
    "engines": [
      "pandas_api"
    ],
    "given": {
      "data": [
        {
          "col": null
        }
      ],
      "dtype": "Int64"
    },
    "when": {
      "args": {}
    },
    "then": {
      "data": [
        null
      ],
      "dtype": "Int64",
      "masks": {
        "col": [
          false
        ]
      },
      "errors": {}
    }
  },
  {
    "description": "cast(-123 <int8> as integer) => -123",
    "engines": [
      "pandas_api"
    ],
    "given": {
      "data": [
        {
          "col": -123
        }
      ],
      "dtype": "int8"
    },
    "when": {
      "args": {}
    },
    "then": {
      "data": [
        -123
      ],
      "dtype": "Int64",
      "masks": {
        "col": [
          false
        ]
      },
      "errors": {}
    }
  },
  {
    "description": "cast(123 <int8> as integer) => 123",
    "engines": [
      "pandas_api"
    ],
    "given": {
      "data": [
        {
          "col": 123
        }
      ],
      "dtype": "int8"
    },
    "when": {
      "args": {}
    },
    "then": {
      "data": [
        123
      ],
      "dtype": "Int64",
      "masks": {
        "col": [
          false
        ]
      },
      "errors": {}
    }
  },
  {
    "description": "cast(123 <int16> as integer) => 123",
    "engines": [
      "pandas_api"
    ],
    "given": {
      "data": [
        {
          "col": 123
        }
      ],
      "dtype": "int16"
    },
    "when": {
      "args": {}
    },
    "then": {
      "data": [
        123
      ],
      "dtype": "Int64",
      "masks": {
        "col": [
          false
        ]
      },
      "errors": {}
    }
  },
  {
    "description": "cast(123 <int32> as integer) => 123",
    "engines": [
      "pandas_api"
    ],
    "given": {
      "data": [
        {
          "col": 123
        }
      ],
      "dtype": "int32"
    },
    "when": {
      "args": {}
    },
    "then": {
      "data": [
        123
      ],
      "dtype": "Int64",
      "masks": {
        "col": [
          false
        ]
      },
      "errors": {}
    }
  },
  {
    "description": "cast(123 <int64> as integer) => 123",
    "engines": [
      "pandas_api"
    ],
    "given": {
      "data": [
        {
          "col": 123
        }
      ],
      "dtype": "int64"
    },
    "when": {
      "args": {}
    },
    "then": {
      "data": [
        123
      ],
      "dtype": "Int64",
      "masks": {
        "col": [
          false
        ]
      },
      "errors": {}
    }
  },
  {
    "description": "cast(123 <UInt8> as integer) => 123",
    "engines": [
      "pandas_api"
    ],
    "given": {
      "data": [
        {
          "col": 123
        }
      ],
      "dtype": "UInt8"
    },
    "when": {
      "args": {}
    },
    "then": {
      "data": [
        123
      ],
      "dtype": "Int64",
      "masks": {
        "col": [
          false
        ]
      },
      "errors": {}
    }
  },
  {
    "description": "cast(123.0 <float16> as integer) => 123",
    "engines": [
      "pandas_api"
    ],
    "given": {
      "data": [
        {
          "col": 123.0
        }
      ],
      "dtype": "float16"
    },
    "when": {
      "args": {}
    },
    "then": {
      "data": [
        123
      ],
      "dtype": "Int64",
      "masks": {
        "col": [
          false
        ]
      },
      "errors": {}
    }
  },
  {
    "description": "cast(123.0 <float32> as integer) => 123",
    "engines": [
      "pandas_api"
    ],
    "given": {
      "data": [
        {
          "col": 123.0
        }
      ],
      "dtype": "float32"
    },
    "when": {
      "args": {}
    },
    "then": {
      "data": [
        123
      ],
      "dtype": "Int64",
      "masks": {
        "col": [
          false
        ]
      },
      "errors": {}
    }
  },
  {
    "description": "cast(123.0 <float64> as integer) => 123",
    "engines": [
      "pandas_api"
    ],
    "given": {
      "data": [
        {
          "col": 123.0
        }
      ],
      "dtype": "float64"
    },
    "when": {
      "args": {}
    },
    "then": {
      "data": [
        123
      ],
      "dtype": "Int64",
      "masks": {
        "col": [
          false
        ]
      },
      "errors": {}
    }
  },
  {
    "description": "cast(123.45 <float64> as integer) => 123",
    "engines": [
      "pandas_api"
    ],
    "given": {
      "data": [
        {
          "col": 123.45
        }
      ],
      "dtype": "float64"
    },
    "when": {
      "args": {}
    },
    "then": {
      "data": [
        123
      ],
      "dtype": "Int64",
      "masks": {
        "col": [
          false
        ]
      },
      "errors": {}
    }
  },
  {
    "description": "cast(123.54 <float64> as integer) => 123",
    "engines": [
      "pandas_api"
    ],
    "given": {
      "data": [
        {
          "col": 123.54
        }
      ],
      "dtype": "float64"
    },
    "when": {
      "args": {}
    },
    "then": {
      "data": [
        123
      ],
      "dtype": "Int64",
      "masks": {
        "col": [
          false
        ]
      },
      "errors": {}
    }
  },
  {
    "description": "cast('123' <string[python]> as integer) => 123",
    "engines": [
      "pandas_api"
    ],
    "given": {
      "data": [
        {
          "col": "123"
        }
      ],
      "dtype": "string[python]"
    },
    "when": {
      "args": {}
    },
    "then": {
      "data": [
        123
      ],
      "dtype": "Int64",
      "masks": {
        "col": [
          false
        ]
      },
      "errors": {}
    }
  },
  {
    "description": "cast('123.45' <string[python]> as integer) => 123",
    "engines": [
      "pandas_api"
    ],
    "given": {
      "data": [
        {
          "col": "123.45"
        }
      ],
      "dtype": "string[python]"
    },
    "when": {
      "args": {}
    },
    "then": {
      "data": [
        123
      ],
      "dtype": "Int64",
      "masks": {
        "col": [
          false
        ]
      },
      "errors": {}
    }
  },
  {
    "description": "cast('123' <object> as integer) => 123",
    "engines": [
      "pandas_api"
    ],
    "given": {
      "data": [
        {
          "col": "123"
        }
      ],
      "dtype": "object"
    },
    "when": {
      "args": {}
    },
    "then": {
      "data": [
        123
      ],
      "dtype": "Int64",
      "masks": {
        "col": [
          false
        ]
      },
      "errors": {}
    }
  },
  {
    "description": "cast(true <boolean> as integer) => 1",
    "engines": [
      "pandas_api"
    ],
    "given": {
      "data": [
        {
          "col": true
        }
      ],
      "dtype": "boolean"
    },
    "when": {
      "args": {}
    },
    "then": {
      "data": [
        1
      ],
      "dtype": "Int64",
      "masks": {
        "col": [
          false
        ]
      },
      "errors": {}
    }
  },
  {
    "description": "cast('foo' <object> as integer) => null, error is raised",
    "engines": [
      "pandas_api"
    ],
    "given": {
      "data": [
        {
          "col": "foo"
        }
      ],
      "dtype": "object"
    },
    "when": {
      "args": {}
    },
    "then": {
      "data": [
        null
      ],
      "dtype": "Int64",
      "masks": {
        "col": [
          true
        ]
      },
      "errors": {
        "0": {
          "col": {
            "details": [
              {
                "type": "int_parsing",
                "msg": "Input should be a valid integer, unable to parse string as an integer"
              }
            ]
          }
        }
      }
    }
  },
  {
    "description": "cast('foo' <string[python]> as integer) => null, error is raised",
    "engines": [
      "pandas_api"
    ],
    "given": {
      "data": [
        {
          "col": "foo"
        }
      ],
      "dtype": "string[python]"
    },
    "when": {
      "args": {}
    },
    "then": {
      "data": [
        null
      ],
      "dtype": "Int64",
      "masks": {
        "col": [
          true
        ]
      },
      "errors": {
        "0": {
          "col": {
            "details": [
              {
                "type": "int_parsing",
                "msg": "Input should be a valid integer, unable to parse string as an integer"
              }
            ]
          }
        }
      }
    }
  },
  {
    "description": "cast(pd.Timestamp('2020-01-01') <datetime64[ns]> as integer) => null, error is raised",
    "engines": [
      "pandas_api"
    ],
    "given": {
      "data": [
        {
          "col": "pd.Timestamp('2020-01-01')"
        }
      ],
      "dtype": "datetime64[ns]"
    },
    "when": {
      "args": {}
    },
    "then": {
      "data": [
        null
      ],
      "dtype": "Int64",
      "masks": {
        "col": [
          true
        ]
      },
      "errors": {
        "0": {
          "col": {
            "details": [
              {
                "type": "int_type",
                "msg": "Input should be a valid integer"
              }
            ]
          }
        }
      }
    }
  },
  {
    "description": "cast({foo='bar'} <object> as integer) => null, error is raised",
    "engines": [
      "pandas_api"
    ],
    "given": {
      "data": [
        {
          "col": {
            "foo": "bar"
          }
        }
      ],
      "dtype": "object"
    },
    "when": {
      "args": {}
    },
    "then": {
      "data": [
        null
      ],
      "dtype": "Int64",
      "masks": {
        "col": [
          true
        ]
      },
      "errors": {
        "0": {
          "col": {
            "details": [
              {
                "type": "int_type",
                "msg": "Input should be a valid integer"
              }
            ]
          }
        }
      }
    }
  },
  {
    "description": "cast($.col1.col2=null as struct<int>) => null",
    "engines": [
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col1": {
            "col2": null
          }
        }
      ],
      "schema": {
        "pyspark": {
          "fields": [
            {
              "name": "col1",
              "type": {
                "type": "struct",
                "fields": [
                  {
                    "name": "col2",
                    "type": "void"
                  }
                ]
              }
            }
          ]
        }
      }
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col1": {
            "type": "object",
            "properties": {
              "col2": {
                "type": "integer"
              }
            }
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col1": {
            "col2": null
          },
          "errors": {}
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col1",
              "type": {
                "type": "struct",
                "fields": [
                  {
                    "name": "col2",
                    "type": "integer"
                  }
                ]
              }
            },
            {
              "name": "errors",
              "type": {
                "type": "map",
                "keyType": "string",
                "valueContainsNull": true,
                "valueType": {
                  "type": "struct",
                  "fields": [
                    {
                      "name": "details",
                      "type": {
                        "type": "array",
                        "containsNull": true,
                        "elementType": {
                          "type": "struct",
                          "fields": [
                            {
                              "name": "type",
                              "type": "string"
                            },
                            {
                              "name": "msg",
                              "type": "string"
                            }
                          ]
                        }
                      },
                      "nullable": false
                    },
                    {
                      "name": "original",
                      "type": "string"
                    }
                  ]
                }
              },
              "nullable": false
            }
          ]
        }
      }
    }
  },
  {
    "description": "cast($.col1.col2='123' as struct<int>) => 123",
    "engines": [
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col1": {
            "col2": "123"
          }
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col1",
              "type": {
                "type": "struct",
                "fields": [
                  {
                    "name": "col2",
                    "type": "string"
                  }
                ]
              }
            }
          ]
        }
      }
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col1": {
            "type": "object",
            "properties": {
              "col2": {
                "type": "integer"
              }
            }
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col1": {
            "col2": 123
          },
          "errors": {}
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col1",
              "type": {
                "type": "struct",
                "fields": [
                  {
                    "name": "col2",
                    "type": "integer"
                  }
                ]
              }
            },
            {
              "name": "errors",
              "type": {
                "type": "map",
                "keyType": "string",
                "valueContainsNull": true,
                "valueType": {
                  "type": "struct",
                  "fields": [
                    {
                      "name": "details",
                      "type": {
                        "type": "array",
                        "containsNull": true,
                        "elementType": {
                          "type": "struct",
                          "fields": [
                            {
                              "name": "type",
                              "type": "string"
                            },
                            {
                              "name": "msg",
                              "type": "string"
                            }
                          ]
                        }
                      },
                      "nullable": false
                    },
                    {
                      "name": "original",
                      "type": "string"
                    }
                  ]
                }
              },
              "nullable": false
            }
          ]
        }
      }
    }
  },
  {
    "description": "cast($.col1.col2='abc' as struct<int>) => null, error is raised",
    "engines": [
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col1": {
            "col2": "abc"
          }
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col1",
              "type": {
                "type": "struct",
                "fields": [
                  {
                    "name": "col2",
                    "type": "string"
                  }
                ]
              }
            }
          ]
        }
      }
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col1": {
            "type": "object",
            "properties": {
              "col2": {
                "type": "integer"
              }
            }
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col1": {
            "col2": null
          },
          "errors": {
            "col1.col2": {
              "details": [
                {
                  "msg": "Input should be a valid integer, unable to parse string as an integer",
                  "type": "int_parsing"
                }
              ],
              "original": "\"abc\""
            }
          }
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col1",
              "type": {
                "type": "struct",
                "fields": [
                  {
                    "name": "col2",
                    "type": "integer"
                  }
                ]
              }
            },
            {
              "name": "errors",
              "type": {
                "type": "map",
                "keyType": "string",
                "valueContainsNull": true,
                "valueType": {
                  "type": "struct",
                  "fields": [
                    {
                      "name": "details",
                      "type": {
                        "type": "array",
                        "containsNull": true,
                        "elementType": {
                          "type": "struct",
                          "fields": [
                            {
                              "name": "type",
                              "type": "string"
                            },
                            {
                              "name": "msg",
                              "type": "string"
                            }
                          ]
                        }
                      },
                      "nullable": false
                    },
                    {
                      "name": "original",
                      "type": "string"
                    }
                  ]
                }
              },
              "nullable": false
            }
          ]
        }
      }
    }
  },
  {
    "description": "cast($.col1.col2.col3.col4=null as struct<int>) => null",
    "engines": [
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col1": {
            "col2": {
              "col3": {
                "col4": null
              }
            }
          }
        }
      ],
      "schema": {
        "pyspark": {
          "fields": [
            {
              "name": "col1",
              "type": {
                "type": "struct",
                "fields": [
                  {
                    "name": "col2",
                    "type": {
                      "type": "struct",
                      "fields": [
                        {
                          "name": "col3",
                          "type": {
                            "type": "struct",
                            "fields": [
                              {
                                "name": "col4",
                                "type": "void"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          ]
        }
      }
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col1": {
            "type": "object",
            "properties": {
              "col2": {
                "type": "object",
                "properties": {
                  "col3": {
                    "type": "object",
                    "properties": {
                      "col4": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col1": {
            "col2": {
              "col3": {
                "col4": null
              }
            }
          },
          "errors": {}
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col1",
              "type": {
                "type": "struct",
                "fields": [
                  {
                    "name": "col2",
                    "type": {
                      "type": "struct",
                      "fields": [
                        {
                          "name": "col3",
                          "type": {
                            "type": "struct",
                            "fields": [
                              {
                                "name": "col4",
                                "type": "integer"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "name": "errors",
              "type": {
                "type": "map",
                "keyType": "string",
                "valueContainsNull": true,
                "valueType": {
                  "type": "struct",
                  "fields": [
                    {
                      "name": "details",
                      "type": {
                        "type": "array",
                        "containsNull": true,
                        "elementType": {
                          "type": "struct",
                          "fields": [
                            {
                              "name": "type",
                              "type": "string"
                            },
                            {
                              "name": "msg",
                              "type": "string"
                            }
                          ]
                        }
                      },
                      "nullable": false
                    },
                    {
                      "name": "original",
                      "type": "string"
                    }
                  ]
                }
              },
              "nullable": false
            }
          ]
        }
      }
    }
  },
  {
    "description": "cast($.col1.col2.col3.col4='123' as struct<int>) => 123",
    "engines": [
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col1": {
            "col2": {
              "col3": {
                "col4": "123"
              }
            }
          }
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col1",
              "type": {
                "type": "struct",
                "fields": [
                  {
                    "name": "col2",
                    "type": {
                      "type": "struct",
                      "fields": [
                        {
                          "name": "col3",
                          "type": {
                            "type": "struct",
                            "fields": [
                              {
                                "name": "col4",
                                "type": "string"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          ]
        }
      }
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col1": {
            "type": "object",
            "properties": {
              "col2": {
                "type": "object",
                "properties": {
                  "col3": {
                    "type": "object",
                    "properties": {
                      "col4": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col1": {
            "col2": {
              "col3": {
                "col4": 123
              }
            }
          },
          "errors": {}
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col1",
              "type": {
                "type": "struct",
                "fields": [
                  {
                    "name": "col2",
                    "type": {
                      "type": "struct",
                      "fields": [
                        {
                          "name": "col3",
                          "type": {
                            "type": "struct",
                            "fields": [
                              {
                                "name": "col4",
                                "type": "integer"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "name": "errors",
              "type": {
                "type": "map",
                "keyType": "string",
                "valueContainsNull": true,
                "valueType": {
                  "type": "struct",
                  "fields": [
                    {
                      "name": "details",
                      "type": {
                        "type": "array",
                        "containsNull": true,
                        "elementType": {
                          "type": "struct",
                          "fields": [
                            {
                              "name": "type",
                              "type": "string"
                            },
                            {
                              "name": "msg",
                              "type": "string"
                            }
                          ]
                        }
                      },
                      "nullable": false
                    },
                    {
                      "name": "original",
                      "type": "string"
                    }
                  ]
                }
              },
              "nullable": false
            }
          ]
        }
      }
    }
  },
  {
    "description": "cast($.col1.col2.col3.col4='abc' as struct<int>) => null, error is raised",
    "engines": [
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col1": {
            "col2": {
              "col3": {
                "col4": "abc"
              }
            }
          }
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col1",
              "type": {
                "type": "struct",
                "fields": [
                  {
                    "name": "col2",
                    "type": {
                      "type": "struct",
                      "fields": [
                        {
                          "name": "col3",
                          "type": {
                            "type": "struct",
                            "fields": [
                              {
                                "name": "col4",
                                "type": "string"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          ]
        }
      }
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col1": {
            "type": "object",
            "properties": {
              "col2": {
                "type": "object",
                "properties": {
                  "col3": {
                    "type": "object",
                    "properties": {
                      "col4": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col1": {
            "col2": {
              "col3": {
                "col4": null
              }
            }
          },
          "errors": {
            "col1.col2.col3.col4": {
              "details": [
                {
                  "msg": "Input should be a valid integer, unable to parse string as an integer",
                  "type": "int_parsing"
                }
              ],
              "original": "\"abc\""
            }
          }
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col1",
              "type": {
                "type": "struct",
                "fields": [
                  {
                    "name": "col2",
                    "type": {
                      "type": "struct",
                      "fields": [
                        {
                          "name": "col3",
                          "type": {
                            "type": "struct",
                            "fields": [
                              {
                                "name": "col4",
                                "type": "integer"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "name": "errors",
              "type": {
                "type": "map",
                "keyType": "string",
                "valueContainsNull": true,
                "valueType": {
                  "type": "struct",
                  "fields": [
                    {
                      "name": "details",
                      "type": {
                        "type": "array",
                        "containsNull": true,
                        "elementType": {
                          "type": "struct",
                          "fields": [
                            {
                              "name": "type",
                              "type": "string"
                            },
                            {
                              "name": "msg",
                              "type": "string"
                            }
                          ]
                        }
                      },
                      "nullable": false
                    },
                    {
                      "name": "original",
                      "type": "string"
                    }
                  ]
                }
              },
              "nullable": false
            }
          ]
        }
      }
    }
  },
  {
    "description": "cast(['1', '2.1', null] as array<int>) => [1, 2, null]",
    "engines": [
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": [
            "1",
            "2.1",
            null
          ]
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col",
              "type": {
                "type": "array",
                "containsNull": true,
                "elementType": "string"
              }
            }
          ]
        }
      }
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "array",
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": [
            1,
            2,
            null
          ],
          "errors": {}
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col",
              "type": {
                "type": "array",
                "containsNull": true,
                "elementType": "integer"
              }
            },
            {
              "name": "errors",
              "type": {
                "type": "map",
                "keyType": "string",
                "valueContainsNull": true,
                "valueType": {
                  "type": "struct",
                  "fields": [
                    {
                      "name": "details",
                      "type": {
                        "type": "array",
                        "containsNull": true,
                        "elementType": {
                          "type": "struct",
                          "fields": [
                            {
                              "name": "type",
                              "type": "string"
                            },
                            {
                              "name": "msg",
                              "type": "string"
                            },
                            {
                              "name": "loc",
                              "type": {
                                "type": "array",
                                "containsNull": true,
                                "elementType": "integer"
                              }
                            }
                          ]
                        }
                      },
                      "nullable": false
                    },
                    {
                      "name": "original",
                      "type": "string"
                    }
                  ]
                }
              },
              "nullable": false
            }
          ]
        }
      }
    }
  },
  {
    "description": "cast([{'foo':'bar'}] as array<int>) => [null], error is raised",
    "engines": [
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": [
            {
              "foo": "bar"
            }
          ]
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col",
              "type": {
                "type": "array",
                "containsNull": true,
                "elementType": {
                  "type": "map",
                  "keyType": "string",
                  "valueContainsNull": true,
                  "valueType": "string"
                }
              }
            }
          ]
        }
      }
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": [
            null
          ],
          "errors": {
            "col[]": {
              "details": [
                {
                  "loc": [
                    0
                  ],
                  "msg": "Input should be a valid integer",
                  "type": "int_type"
                }
              ],
              "original": "[{\"foo\":\"bar\"}]"
            }
          }
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col",
              "type": {
                "type": "array",
                "containsNull": true,
                "elementType": "integer"
              }
            },
            {
              "name": "errors",
              "type": {
                "type": "map",
                "keyType": "string",
                "valueContainsNull": true,
                "valueType": {
                  "type": "struct",
                  "fields": [
                    {
                      "name": "details",
                      "type": {
                        "type": "array",
                        "containsNull": true,
                        "elementType": {
                          "type": "struct",
                          "fields": [
                            {
                              "name": "type",
                              "type": "string"
                            },
                            {
                              "name": "msg",
                              "type": "string"
                            },
                            {
                              "name": "loc",
                              "type": {
                                "type": "array",
                                "containsNull": true,
                                "elementType": "integer"
                              }
                            }
                          ]
                        }
                      },
                      "nullable": false
                    },
                    {
                      "name": "original",
                      "type": "string"
                    }
                  ]
                }
              },
              "nullable": false
            }
          ]
        }
      }
    }
  },
  {
    "description": "cast(['1', null, 'foo', '2.1'] as array<int>) => [1, null, null, 2], error is raised",
    "engines": [
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": [
            "1",
            null,
            "foo",
            "2.1"
          ]
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col",
              "type": {
                "type": "array",
                "containsNull": true,
                "elementType": "string"
              }
            }
          ]
        }
      }
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "array",
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": [
            1,
            null,
            null,
            2
          ],
          "errors": {
            "col[]": {
              "details": [
                {
                  "loc": [
                    2
                  ],
                  "msg": "Input should be a valid integer, unable to parse string as an integer",
                  "type": "int_parsing"
                }
              ],
              "original": "[\"1\",null,\"foo\",\"2.1\"]"
            }
          }
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col",
              "type": {
                "type": "array",
                "containsNull": true,
                "elementType": "integer"
              }
            },
            {
              "name": "errors",
              "type": {
                "type": "map",
                "keyType": "string",
                "valueContainsNull": true,
                "valueType": {
                  "type": "struct",
                  "fields": [
                    {
                      "name": "details",
                      "type": {
                        "type": "array",
                        "containsNull": true,
                        "elementType": {
                          "type": "struct",
                          "fields": [
                            {
                              "name": "type",
                              "type": "string"
                            },
                            {
                              "name": "msg",
                              "type": "string"
                            },
                            {
                              "name": "loc",
                              "type": {
                                "type": "array",
                                "containsNull": true,
                                "elementType": "integer"
                              }
                            }
                          ]
                        }
                      },
                      "nullable": false
                    },
                    {
                      "name": "original",
                      "type": "string"
                    }
                  ]
                }
              },
              "nullable": false
            }
          ]
        }
      }
    }
  },
  {
    "description": "cast($.col1.col2.col3['1', null, 'foo', '2.1'] as array<int>) => [1, null, null, 2], error is raised",
    "engines": [
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col1": {
            "col2": {
              "col3": [
                "1",
                null,
                "foo",
                "2.1"
              ]
            }
          }
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col1",
              "type": {
                "type": "struct",
                "fields": [
                  {
                    "name": "col2",
                    "type": {
                      "type": "struct",
                      "fields": [
                        {
                          "name": "col3",
                          "type": {
                            "type": "array",
                            "containsNull": true,
                            "elementType": "string"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          ]
        }
      }
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col1": {
            "type": "object",
            "properties": {
              "col2": {
                "type": "object",
                "properties": {
                  "col3": {
                    "type": "array",
                    "items": {
                      "type": [
                        "integer",
                        "null"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col1": {
            "col2": {
              "col3": [
                1,
                null,
                null,
                2
              ]
            }
          },
          "errors": {
            "col1.col2.col3[]": {
              "details": [
                {
                  "loc": [
                    2
                  ],
                  "msg": "Input should be a valid integer, unable to parse string as an integer",
                  "type": "int_parsing"
                }
              ],
              "original": "[\"1\",null,\"foo\",\"2.1\"]"
            }
          }
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col1",
              "type": {
                "type": "struct",
                "fields": [
                  {
                    "name": "col2",
                    "type": {
                      "type": "struct",
                      "fields": [
                        {
                          "name": "col3",
                          "type": {
                            "type": "array",
                            "containsNull": true,
                            "elementType": "integer"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "name": "errors",
              "type": {
                "type": "map",
                "keyType": "string",
                "valueContainsNull": true,
                "valueType": {
                  "type": "struct",
                  "fields": [
                    {
                      "name": "details",
                      "type": {
                        "type": "array",
                        "containsNull": true,
                        "elementType": {
                          "type": "struct",
                          "fields": [
                            {
                              "name": "type",
                              "type": "string"
                            },
                            {
                              "name": "msg",
                              "type": "string"
                            },
                            {
                              "name": "loc",
                              "type": {
                                "type": "array",
                                "containsNull": true,
                                "elementType": "integer"
                              }
                            }
                          ]
                        }
                      },
                      "nullable": false
                    },
                    {
                      "name": "original",
                      "type": "string"
                    }
                  ]
                }
              },
              "nullable": false
            }
          ]
        }
      }
    }
  },
  {
    "description": "cast($.col1.col2.col3[.col4.col5.col6='123', ='456'] as array<struct<int>>) => [123, 456]",
    "engines": [
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col1": {
            "col2": {
              "col3": [
                {
                  "col4": {
                    "col5": {
                      "col6": "123"
                    }
                  }
                },
                {
                  "col4": {
                    "col5": {
                      "col6": "456"
                    }
                  }
                }
              ]
            }
          }
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col1",
              "type": {
                "type": "struct",
                "fields": [
                  {
                    "name": "col2",
                    "type": {
                      "type": "struct",
                      "fields": [
                        {
                          "name": "col3",
                          "type": {
                            "type": "array",
                            "containsNull": true,
                            "elementType": {
                              "type": "struct",
                              "fields": [
                                {
                                  "name": "col4",
                                  "type": {
                                    "type": "struct",
                                    "fields": [
                                      {
                                        "name": "col5",
                                        "type": {
                                          "type": "struct",
                                          "fields": [
                                            {
                                              "name": "col6",
                                              "type": "string"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          ]
        }
      }
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col1": {
            "type": "object",
            "properties": {
              "col2": {
                "type": "object",
                "properties": {
                  "col3": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "col4": {
                          "type": "object",
                          "properties": {
                            "col5": {
                              "type": "object",
                              "properties": {
                                "col6": {
                                  "type": "integer"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col1": {
            "col2": {
              "col3": [
                {
                  "col4": {
                    "col5": {
                      "col6": 123
                    }
                  }
                },
                {
                  "col4": {
                    "col5": {
                      "col6": 456
                    }
                  }
                }
              ]
            }
          },
          "errors": {}
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col1",
              "type": {
                "type": "struct",
                "fields": [
                  {
                    "name": "col2",
                    "type": {
                      "type": "struct",
                      "fields": [
                        {
                          "name": "col3",
                          "type": {
                            "type": "array",
                            "containsNull": true,
                            "elementType": {
                              "type": "struct",
                              "fields": [
                                {
                                  "name": "col4",
                                  "type": {
                                    "type": "struct",
                                    "fields": [
                                      {
                                        "name": "col5",
                                        "type": {
                                          "type": "struct",
                                          "fields": [
                                            {
                                              "name": "col6",
                                              "type": "integer"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "name": "errors",
              "type": {
                "type": "map",
                "keyType": "string",
                "valueContainsNull": true,
                "valueType": {
                  "type": "struct",
                  "fields": [
                    {
                      "name": "details",
                      "type": {
                        "type": "array",
                        "containsNull": true,
                        "elementType": {
                          "type": "struct",
                          "fields": [
                            {
                              "name": "type",
                              "type": "string"
                            },
                            {
                              "name": "msg",
                              "type": "string"
                            },
                            {
                              "name": "loc",
                              "type": {
                                "type": "array",
                                "containsNull": true,
                                "elementType": "integer"
                              }
                            }
                          ]
                        }
                      },
                      "nullable": false
                    },
                    {
                      "name": "original",
                      "type": "string"
                    }
                  ]
                }
              },
              "nullable": false
            }
          ]
        }
      }
    }
  },
  {
    "description": "cast($.col1.col2.col3[.col4.col5.col6='123', ='foo', =null] as array<struct<int>>) => [123, null, null], error is raised",
    "engines": [
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col1": {
            "col2": {
              "col3": [
                {
                  "col4": {
                    "col5": {
                      "col6": "123"
                    }
                  }
                },
                {
                  "col4": {
                    "col5": {
                      "col6": "foo"
                    }
                  }
                },
                {
                  "col4": {
                    "col5": {
                      "col6": null
                    }
                  }
                }
              ]
            }
          }
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col1",
              "type": {
                "type": "struct",
                "fields": [
                  {
                    "name": "col2",
                    "type": {
                      "type": "struct",
                      "fields": [
                        {
                          "name": "col3",
                          "type": {
                            "type": "array",
                            "containsNull": true,
                            "elementType": {
                              "type": "struct",
                              "fields": [
                                {
                                  "name": "col4",
                                  "type": {
                                    "type": "struct",
                                    "fields": [
                                      {
                                        "name": "col5",
                                        "type": {
                                          "type": "struct",
                                          "fields": [
                                            {
                                              "name": "col6",
                                              "type": "string"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          ]
        }
      }
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col1": {
            "type": "object",
            "properties": {
              "col2": {
                "type": "object",
                "properties": {
                  "col3": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "col4": {
                          "type": "object",
                          "properties": {
                            "col5": {
                              "type": "object",
                              "properties": {
                                "col6": {
                                  "type": "integer"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col1": {
            "col2": {
              "col3": [
                {
                  "col4": {
                    "col5": {
                      "col6": 123
                    }
                  }
                },
                {
                  "col4": {
                    "col5": {
                      "col6": null
                    }
                  }
                },
                {
                  "col4": {
                    "col5": {
                      "col6": null
                    }
                  }
                }
              ]
            }
          },
          "errors": {
            "col1.col2.col3[].col4.col5.col6": {
              "details": [
                {
                  "loc": [
                    1
                  ],
                  "msg": "Input should be a valid integer, unable to parse string as an integer",
                  "type": "int_parsing"
                }
              ],
              "original": "[\"123\",\"foo\",null]"
            }
          }
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col1",
              "type": {
                "type": "struct",
                "fields": [
                  {
                    "name": "col2",
                    "type": {
                      "type": "struct",
                      "fields": [
                        {
                          "name": "col3",
                          "type": {
                            "type": "array",
                            "containsNull": true,
                            "elementType": {
                              "type": "struct",
                              "fields": [
                                {
                                  "name": "col4",
                                  "type": {
                                    "type": "struct",
                                    "fields": [
                                      {
                                        "name": "col5",
                                        "type": {
                                          "type": "struct",
                                          "fields": [
                                            {
                                              "name": "col6",
                                              "type": "integer"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "name": "errors",
              "type": {
                "type": "map",
                "keyType": "string",
                "valueContainsNull": true,
                "valueType": {
                  "type": "struct",
                  "fields": [
                    {
                      "name": "details",
                      "type": {
                        "type": "array",
                        "containsNull": true,
                        "elementType": {
                          "type": "struct",
                          "fields": [
                            {
                              "name": "type",
                              "type": "string"
                            },
                            {
                              "name": "msg",
                              "type": "string"
                            },
                            {
                              "name": "loc",
                              "type": {
                                "type": "array",
                                "containsNull": true,
                                "elementType": "integer"
                              }
                            }
                          ]
                        }
                      },
                      "nullable": false
                    },
                    {
                      "name": "original",
                      "type": "string"
                    }
                  ]
                }
              },
              "nullable": false
            }
          ]
        }
      }
    }
  }
]
