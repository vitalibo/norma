[
  {
    "description": "cast(null as uuid) => null",
    "engines": [
      "pandas",
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": null
        }
      ],
      "schema": {
        "pyspark": {
          "fields": [
            {
              "name": "col",
              "type": "void"
            }
          ],
          "type": "struct"
        },
        "pandas": {
          "col": "object"
        }
      }
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": null,
          "errors": {}
        }
      ]
    }
  },
  {
    "description": "cast('b9e95281-2f6b-4f75-8010-5afabaca81e7' as uuid) => uuid('b9e95281-2f6b-4f75-8010-5afabaca81e7')",
    "engines": [
      "pandas",
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": "b9e95281-2f6b-4f75-8010-5afabaca81e7"
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": "b9e95281-2f6b-4f75-8010-5afabaca81e7",
          "errors": {}
        }
      ]
    }
  },
  {
    "description": "cast('B9E95281-2F6B-4F75-8010-5AFABACA81E7' as uuid) => uuid('b9e95281-2f6b-4f75-8010-5afabaca81e7')",
    "engines": [
      "pandas",
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": "B9E95281-2F6B-4F75-8010-5AFABACA81E7"
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": "b9e95281-2f6b-4f75-8010-5afabaca81e7",
          "errors": {}
        }
      ]
    }
  },
  {
    "description": "cast('foo' as uuid) => null, error is raised",
    "engines": [
      "pandas",
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": "foo"
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": null,
          "errors": {
            "col": {
              "details": [
                {
                  "msg": "Input should be a valid UUID, unable to parse string as a UUID",
                  "type": "uuid_parsing"
                }
              ],
              "original": "\"foo\""
            }
          }
        }
      ]
    }
  },
  {
    "description": "cast(123 as uuid) => null, error is raised",
    "engines": [
      "pandas",
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": 123
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": null,
          "errors": {
            "col": {
              "details": [
                {
                  "msg": "UUID input should be a string",
                  "type": "uuid_type"
                }
              ],
              "original": "123"
            }
          }
        }
      ]
    }
  },
  {
    "description": "cast('62ca2b41-b7c0-474c-b138-bf5e3f4283d1' <string[python]> as uuid) => uuid('62ca2b41-b7c0-474c-b138-bf5e3f4283d1')",
    "engines": [
      "pandas_api"
    ],
    "given": {
      "data": [
        {
          "col": "62ca2b41-b7c0-474c-b138-bf5e3f4283d1"
        }
      ],
      "dtype": "string[python]"
    },
    "when": {
      "args": {}
    },
    "then": {
      "data": [
        "62ca2b41-b7c0-474c-b138-bf5e3f4283d1"
      ],
      "dtype": "string[python]",
      "masks": {
        "col": [
          false
        ]
      },
      "errors": {}
    }
  },
  {
    "description": "cast('62ca2b41-b7c0-474c-b138-bf5e3f4283d1' <object> as uuid) => uuid('62ca2b41-b7c0-474c-b138-bf5e3f4283d1')",
    "engines": [
      "pandas_api"
    ],
    "given": {
      "data": [
        {
          "col": "62ca2b41-b7c0-474c-b138-bf5e3f4283d1"
        }
      ],
      "dtype": "object"
    },
    "when": {
      "args": {}
    },
    "then": {
      "data": [
        "62ca2b41-b7c0-474c-b138-bf5e3f4283d1"
      ],
      "dtype": "string[python]",
      "masks": {
        "col": [
          false
        ]
      },
      "errors": {}
    }
  },
  {
    "description": "cast(uuid('62ca2b41-b7c0-474c-b138-bf5e3f4283d1') <object> as uuid) => uuid('62ca2b41-b7c0-474c-b138-bf5e3f4283d1')",
    "engines": [
      "pandas_api"
    ],
    "given": {
      "data": [
        {
          "col": "uuid.UUID('62ca2b41-b7c0-474c-b138-bf5e3f4283d1')"
        }
      ],
      "dtype": "object"
    },
    "when": {
      "args": {}
    },
    "then": {
      "data": [
        "62ca2b41-b7c0-474c-b138-bf5e3f4283d1"
      ],
      "dtype": "string[python]",
      "masks": {
        "col": [
          false
        ]
      },
      "errors": {}
    }
  },
  {
    "description": "cast(123 <int16> as uuid) => null, error is raised",
    "engines": [
      "pandas_api"
    ],
    "given": {
      "data": [
        {
          "col": 123
        }
      ],
      "dtype": "int16"
    },
    "when": {
      "args": {}
    },
    "then": {
      "data": [
        null
      ],
      "dtype": "string[python]",
      "masks": {
        "col": [
          true
        ]
      },
      "errors": {
        "0": {
          "col": {
            "details": [
              {
                "type": "uuid_type",
                "msg": "UUID input should be a string"
              }
            ]
          }
        }
      }
    }
  },
  {
    "description": "cast(123 <object> as uuid) => null, error is raised",
    "engines": [
      "pandas_api"
    ],
    "given": {
      "data": [
        {
          "col": 123
        }
      ],
      "dtype": "object"
    },
    "when": {
      "args": {}
    },
    "then": {
      "data": [
        null
      ],
      "dtype": "string[python]",
      "masks": {
        "col": [
          true
        ]
      },
      "errors": {
        "0": {
          "col": {
            "details": [
              {
                "type": "uuid_type",
                "msg": "UUID input should be a string"
              }
            ]
          }
        }
      }
    }
  },
  {
    "description": "cast({col.col1.col11='B9E95281-2F6B-4F75-8010-5AFABACA81E7'} as uuid) => uuid('b9e95281-2f6b-4f75-8010-5afabaca81e7')",
    "engines": [
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": {
            "col1": {
              "col11": "B9E95281-2F6B-4F75-8010-5AFABACA81E7"
            }
          }
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "object",
            "properties": {
              "col1": {
                "type": "object",
                "properties": {
                  "col11": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": {
            "col1": {
              "col11": "b9e95281-2f6b-4f75-8010-5afabaca81e7"
            }
          },
          "errors": {}
        }
      ]
    }
  },
  {
    "description": "cast({col.col1.col11=123} as uuid) => null, error is raised",
    "engines": [
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": {
            "col1": {
              "col11": 123
            }
          }
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "object",
            "properties": {
              "col1": {
                "type": "object",
                "properties": {
                  "col11": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": {
            "col1": {
              "col11": null
            }
          },
          "errors": {
            "col.col1.col11": {
              "details": [
                {
                  "msg": "UUID input should be a string",
                  "type": "uuid_type"
                }
              ],
              "original": "123"
            }
          }
        }
      ]
    }
  },
  {
    "description": "cast({col.col1.col11='foo'} as uuid) => null, error is raised",
    "engines": [
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": {
            "col1": {
              "col11": "foo"
            }
          }
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "object",
            "properties": {
              "col1": {
                "type": "object",
                "properties": {
                  "col11": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": {
            "col1": {
              "col11": null
            }
          },
          "errors": {
            "col.col1.col11": {
              "details": [
                {
                  "msg": "Input should be a valid UUID, unable to parse string as a UUID",
                  "type": "uuid_parsing"
                }
              ],
              "original": "\"foo\""
            }
          }
        }
      ]
    }
  },
  {
    "description": "cast(['b9e95281-2f6b-4f75-8010-5afabaca81e7', 'C6F75244-8D0E-479C-B557-5585F485350C', null] as array<uuid>) => ['b9e95281-2f6b-4f75-8010-5afabaca81e7', 'c6f75244-8d0e-479c-b557-5585f485350c', null]",
    "engines": [
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": [
            "b9e95281-2f6b-4f75-8010-5afabaca81e7",
            "C6F75244-8D0E-479C-B557-5585F485350C",
            null
          ]
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "array",
            "items": {
              "type": [
                "string",
                "null"
              ],
              "format": "uuid"
            }
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": [
            "b9e95281-2f6b-4f75-8010-5afabaca81e7",
            "c6f75244-8d0e-479c-b557-5585f485350c",
            null
          ],
          "errors": {}
        }
      ]
    }
  },
  {
    "description": "cast([{co1:'foo'}] as array<uuid>) => [null], error is raised",
    "engines": [
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": [
            {
              "co1": "foo"
            }
          ]
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": [
            null
          ],
          "errors": {
            "col[]": {
              "details": [
                {
                  "loc": [
                    0
                  ],
                  "msg": "UUID input should be a string",
                  "type": "uuid_type"
                }
              ],
              "original": "[{\"co1\":\"foo\"}]"
            }
          }
        }
      ]
    }
  },
  {
    "description": "cast(['b9e95281-2f6b-4f75-8010-5afabaca81e7', 'C6F75244-8D0E-479C-B557-5585F485350C', 'foo', null] as array<uuid>) => ['b9e95281-2f6b-4f75-8010-5afabaca81e7', 'c6f75244-8d0e-479c-b557-5585f485350c', null, null], error is raised",
    "engines": [
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": [
            "b9e95281-2f6b-4f75-8010-5afabaca81e7",
            "C6F75244-8D0E-479C-B557-5585F485350C",
            "foo",
            null
          ]
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "array",
            "items": {
              "type": [
                "string",
                "null"
              ],
              "format": "uuid"
            }
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": [
            "b9e95281-2f6b-4f75-8010-5afabaca81e7",
            "c6f75244-8d0e-479c-b557-5585f485350c",
            null,
            null
          ],
          "errors": {
            "col[]": {
              "details": [
                {
                  "loc": [
                    2
                  ],
                  "msg": "Input should be a valid UUID, unable to parse string as a UUID",
                  "type": "uuid_parsing"
                }
              ],
              "original": "[\"b9e95281-2f6b-4f75-8010-5afabaca81e7\",\"C6F75244-8D0E-479C-B557-5585F485350C\",\"foo\",null]"
            }
          }
        }
      ]
    }
  }
]
