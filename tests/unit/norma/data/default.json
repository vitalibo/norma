[
  {
    "description": "$.age ?: 25",
    "engines": [
      "pandas",
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "name": "John",
          "age": 30
        },
        {
          "name": "Nancy"
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "age",
              "type": "integer"
            }
          ]
        }
      }
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "age": {
            "type": "integer",
            "default": 25
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "name": "John",
          "age": 30,
          "errors": {}
        },
        {
          "name": "Nancy",
          "age": 25,
          "errors": {}
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "age",
              "type": "integer",
              "nullable": false
            },
            {
              "name": "errors",
              "nullable": false,
              "type": {
                "keyType": "string",
                "type": "map",
                "valueContainsNull": true,
                "valueType": {
                  "type": "struct",
                  "fields": [
                    {
                      "name": "details",
                      "nullable": false,
                      "type": {
                        "containsNull": true,
                        "type": "array",
                        "elementType": {
                          "type": "struct",
                          "fields": [
                            {
                              "name": "type",
                              "type": "string"
                            },
                            {
                              "name": "msg",
                              "type": "string"
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "original",
                      "type": "string"
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "description": "missing $.address ?: 'unknown'",
    "engines": [
      "pandas",
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "name": "John",
          "age": 30
        },
        {
          "name": "Nancy",
          "age": 25
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "age",
              "type": "integer"
            }
          ]
        }
      }
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "age": {
            "type": "integer"
          },
          "address": {
            "type": "string",
            "default": "unknown"
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "name": "John",
          "age": 30,
          "address": "unknown",
          "errors": {}
        },
        {
          "name": "Nancy",
          "age": 25,
          "address": "unknown",
          "errors": {}
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "age",
              "type": "integer"
            },
            {
              "name": "address",
              "type": "string",
              "nullable": false
            },
            {
              "name": "errors",
              "nullable": false,
              "type": {
                "keyType": "string",
                "type": "map",
                "valueContainsNull": true,
                "valueType": {
                  "type": "struct",
                  "fields": [
                    {
                      "name": "details",
                      "nullable": false,
                      "type": {
                        "containsNull": true,
                        "type": "array",
                        "elementType": {
                          "type": "struct",
                          "fields": [
                            {
                              "name": "type",
                              "type": "string"
                            },
                            {
                              "name": "msg",
                              "type": "string"
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "original",
                      "type": "string"
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "description": "$.address.city.name ?: 'unknown'",
    "engines": [
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "name": "John",
          "age": 30
        },
        {
          "name": "Nancy",
          "address": {
            "city": {
              "name": "New York",
              "zip": 10001
            }
          }
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "age",
              "type": "integer"
            },
            {
              "name": "address",
              "type": {
                "type": "struct",
                "fields": [
                  {
                    "name": "city",
                    "type": {
                      "type": "struct",
                      "fields": [
                        {
                          "name": "name",
                          "type": "string"
                        },
                        {
                          "name": "zip",
                          "type": "integer"
                        }
                      ]
                    }
                  }
                ]
              }
            }
          ]
        }
      }
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "age": {
            "type": "integer",
            "default": 25
          },
          "address": {
            "type": "object",
            "properties": {
              "city": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "default": "unknown"
                  },
                  "zip": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "name": "John",
          "age": 30,
          "address": {
            "city": {
              "name": "unknown",
              "zip": null
            }
          },
          "errors": {}
        },
        {
          "name": "Nancy",
          "age": 25,
          "address": {
            "city": {
              "name": "New York",
              "zip": 10001
            }
          },
          "errors": {}
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "age",
              "type": "integer",
              "nullable": false
            },
            {
              "name": "address",
              "type": {
                "type": "struct",
                "fields": [
                  {
                    "name": "city",
                    "type": {
                      "type": "struct",
                      "fields": [
                        {
                          "name": "name",
                          "type": "string",
                          "nullable": false
                        },
                        {
                          "name": "zip",
                          "type": "integer"
                        }
                      ]
                    },
                    "nullable": false
                  }
                ]
              },
              "nullable": false
            },
            {
              "name": "errors",
              "nullable": false,
              "type": {
                "keyType": "string",
                "type": "map",
                "valueContainsNull": true,
                "valueType": {
                  "type": "struct",
                  "fields": [
                    {
                      "name": "details",
                      "nullable": false,
                      "type": {
                        "containsNull": true,
                        "type": "array",
                        "elementType": {
                          "type": "struct",
                          "fields": [
                            {
                              "name": "type",
                              "type": "string"
                            },
                            {
                              "name": "msg",
                              "type": "string"
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "original",
                      "type": "string"
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "description": "missing $.address.city.name ?: 'unknown'",
    "engines": [
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "name": "John",
          "age": 30
        },
        {
          "name": "Nancy",
          "age": 25
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "age",
              "type": "integer"
            }
          ]
        }
      }
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "age": {
            "type": "integer"
          },
          "address": {
            "type": "object",
            "properties": {
              "city": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "default": "unknown"
                  },
                  "zip": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "name": "John",
          "age": 30,
          "address": {
            "city": {
              "name": "unknown",
              "zip": null
            }
          },
          "errors": {}
        },
        {
          "name": "Nancy",
          "age": 25,
          "address": {
            "city": {
              "name": "unknown",
              "zip": null
            }
          },
          "errors": {}
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "age",
              "type": "integer"
            },
            {
              "name": "address",
              "type": {
                "type": "struct",
                "fields": [
                  {
                    "name": "city",
                    "type": {
                      "type": "struct",
                      "fields": [
                        {
                          "name": "name",
                          "type": "string",
                          "nullable": false
                        },
                        {
                          "name": "zip",
                          "type": "integer"
                        }
                      ]
                    },
                    "nullable": false
                  }
                ]
              },
              "nullable": false
            },
            {
              "name": "errors",
              "nullable": false,
              "type": {
                "keyType": "string",
                "type": "map",
                "valueContainsNull": true,
                "valueType": {
                  "type": "struct",
                  "fields": [
                    {
                      "name": "details",
                      "nullable": false,
                      "type": {
                        "containsNull": true,
                        "type": "array",
                        "elementType": {
                          "type": "struct",
                          "fields": [
                            {
                              "name": "type",
                              "type": "string"
                            },
                            {
                              "name": "msg",
                              "type": "string"
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "original",
                      "type": "string"
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "description": "cast($.age as int) ?: 25",
    "engines": [
      "pandas",
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "name": "John",
          "age": "30"
        },
        {
          "name": "Nancy",
          "age": "abc"
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "age",
              "type": "string"
            }
          ]
        }
      }
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "age": {
            "type": "integer",
            "default": 25
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "name": "John",
          "age": 30,
          "errors": {}
        },
        {
          "name": "Nancy",
          "age": 25,
          "errors": {
            "age": {
              "details": [
                {
                  "type": "int_parsing",
                  "msg": "Input should be a valid integer, unable to parse string as an integer"
                }
              ],
              "original": "\"abc\""
            }
          }
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "age",
              "type": "integer",
              "nullable": false
            },
            {
              "name": "errors",
              "nullable": false,
              "type": {
                "keyType": "string",
                "type": "map",
                "valueContainsNull": true,
                "valueType": {
                  "type": "struct",
                  "fields": [
                    {
                      "name": "details",
                      "nullable": false,
                      "type": {
                        "containsNull": true,
                        "type": "array",
                        "elementType": {
                          "type": "struct",
                          "fields": [
                            {
                              "name": "type",
                              "type": "string"
                            },
                            {
                              "name": "msg",
                              "type": "string"
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "original",
                      "type": "string"
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "description": "cast($.address.city.zip as int) ?: -1",
    "engines": [
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "name": "John",
          "address": {
            "city": {
              "zip": "10001"
            }
          }
        },
        {
          "name": "Nancy",
          "address": {
            "city": {
              "zip": "abc"
            }
          }
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "address",
              "type": {
                "type": "struct",
                "fields": [
                  {
                    "name": "city",
                    "type": {
                      "type": "struct",
                      "fields": [
                        {
                          "name": "zip",
                          "type": "string"
                        }
                      ]
                    }
                  }
                ]
              }
            }
          ]
        }
      }
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "address": {
            "type": "object",
            "properties": {
              "city": {
                "type": "object",
                "properties": {
                  "zip": {
                    "type": "integer",
                    "default": -1
                  }
                }
              }
            }
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "name": "John",
          "address": {
            "city": {
              "zip": 10001
            }
          },
          "errors": {}
        },
        {
          "name": "Nancy",
          "address": {
            "city": {
              "zip": -1
            }
          },
          "errors": {
            "address.city.zip": {
              "details": [
                {
                  "type": "int_parsing",
                  "msg": "Input should be a valid integer, unable to parse string as an integer"
                }
              ],
              "original": "\"abc\""
            }
          }
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "address",
              "type": {
                "type": "struct",
                "fields": [
                  {
                    "name": "city",
                    "type": {
                      "type": "struct",
                      "fields": [
                        {
                          "name": "zip",
                          "type": "integer",
                          "nullable": false
                        }
                      ]
                    },
                    "nullable": false
                  }
                ]
              },
              "nullable": false
            },
            {
              "name": "errors",
              "nullable": false,
              "type": {
                "keyType": "string",
                "type": "map",
                "valueContainsNull": true,
                "valueType": {
                  "type": "struct",
                  "fields": [
                    {
                      "name": "details",
                      "nullable": false,
                      "type": {
                        "containsNull": true,
                        "type": "array",
                        "elementType": {
                          "type": "struct",
                          "fields": [
                            {
                              "name": "type",
                              "type": "string"
                            },
                            {
                              "name": "msg",
                              "type": "string"
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "original",
                      "type": "string"
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "description": "each(cast($.col.col1.col2[] as int)) ?: -1",
    "engines": [
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": {
            "col1": {
              "col2": [
                "3",
                "4",
                "abc",
                "6",
                null
              ]
            }
          }
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col",
              "type": {
                "type": "struct",
                "fields": [
                  {
                    "name": "col1",
                    "type": {
                      "type": "struct",
                      "fields": [
                        {
                          "name": "col2",
                          "type": {
                            "type": "array",
                            "elementType": "string",
                            "containsNull": true
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          ]
        }
      }
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "object",
            "properties": {
              "col1": {
                "type": "object",
                "properties": {
                  "col2": {
                    "type": "array",
                    "items": {
                      "type": [
                        "integer",
                        "null"
                      ],
                      "default": -1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": {
            "col1": {
              "col2": [
                3,
                4,
                -1,
                6,
                -1
              ]
            }
          },
          "errors": {
            "col.col1.col2[]": {
              "details": [
                {
                  "loc": [
                    2
                  ],
                  "type": "int_parsing",
                  "msg": "Input should be a valid integer, unable to parse string as an integer"
                }
              ],
              "original": "[\"3\",\"4\",\"abc\",\"6\",null]"
            }
          }
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col",
              "type": {
                "type": "struct",
                "fields": [
                  {
                    "name": "col1",
                    "type": {
                      "type": "struct",
                      "fields": [
                        {
                          "name": "col2",
                          "type": {
                            "type": "array",
                            "elementType": "integer",
                            "containsNull": false
                          }
                        }
                      ]
                    },
                    "nullable": false
                  }
                ]
              },
              "nullable": false
            },
            {
              "name": "errors",
              "nullable": false,
              "type": {
                "keyType": "string",
                "type": "map",
                "valueContainsNull": true,
                "valueType": {
                  "type": "struct",
                  "fields": [
                    {
                      "name": "details",
                      "nullable": false,
                      "type": {
                        "containsNull": true,
                        "type": "array",
                        "elementType": {
                          "type": "struct",
                          "fields": [
                            {
                              "name": "type",
                              "type": "string"
                            },
                            {
                              "name": "msg",
                              "type": "string"
                            },
                            {
                              "name": "loc",
                              "type": {
                                "containsNull": true,
                                "type": "array",
                                "elementType": "integer"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "original",
                      "type": "string"
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "description": "each(cast($.col1.col2[].col3.col4 as int)) ?: -1",
    "engines": [
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col1": {
            "col2": [
              {
                "col3": {
                  "col4": "1"
                }
              },
              {
                "col3": {
                  "col4": "abc"
                }
              },
              {
                "col3": {
                  "col4": "3"
                }
              },
              {
                "col3": {
                  "col4": null
                }
              },
              {
                "col3": {
                  "col4": "4"
                }
              },
              {
                "col3": {
                  "col4": null
                }
              }
            ]
          }
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col1",
              "type": {
                "type": "struct",
                "fields": [
                  {
                    "name": "col2",
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "struct",
                        "fields": [
                          {
                            "name": "col3",
                            "type": {
                              "type": "struct",
                              "fields": [
                                {
                                  "name": "col4",
                                  "type": "string"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "containsNull": true
                    }
                  }
                ]
              }
            }
          ]
        }
      }
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col1": {
            "type": "object",
            "properties": {
              "col2": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "col3": {
                      "type": "object",
                      "properties": {
                        "col4": {
                          "type": "integer",
                          "default": -1
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col1": {
            "col2": [
              {
                "col3": {
                  "col4": 1
                }
              },
              {
                "col3": {
                  "col4": -1
                }
              },
              {
                "col3": {
                  "col4": 3
                }
              },
              {
                "col3": {
                  "col4": -1
                }
              },
              {
                "col3": {
                  "col4": 4
                }
              },
              {
                "col3": {
                  "col4": -1
                }
              }
            ]
          },
          "errors": {
            "col1.col2[].col3.col4": {
              "details": [
                {
                  "loc": [
                    1
                  ],
                  "msg": "Input should be a valid integer, unable to parse string as an integer",
                  "type": "int_parsing"
                }
              ],
              "original": "[\"1\",\"abc\",\"3\",null,\"4\",null]"
            }
          }
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col1",
              "type": {
                "type": "struct",
                "fields": [
                  {
                    "name": "col2",
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "struct",
                        "fields": [
                          {
                            "name": "col3",
                            "type": {
                              "type": "struct",
                              "fields": [
                                {
                                  "name": "col4",
                                  "type": "integer",
                                  "nullable": false
                                }
                              ]
                            },
                            "nullable": false
                          }
                        ]
                      },
                      "containsNull": false
                    }
                  }
                ]
              },
              "nullable": false
            },
            {
              "name": "errors",
              "nullable": false,
              "type": {
                "keyType": "string",
                "type": "map",
                "valueContainsNull": true,
                "valueType": {
                  "type": "struct",
                  "fields": [
                    {
                      "name": "details",
                      "nullable": false,
                      "type": {
                        "containsNull": true,
                        "type": "array",
                        "elementType": {
                          "type": "struct",
                          "fields": [
                            {
                              "name": "type",
                              "type": "string"
                            },
                            {
                              "name": "msg",
                              "type": "string"
                            },
                            {
                              "name": "loc",
                              "type": {
                                "containsNull": true,
                                "type": "array",
                                "elementType": "integer"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "original",
                      "type": "string"
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  }
]
