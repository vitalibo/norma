[
  {
    "description": "cast(null as date) => null",
    "engines": [
      "pandas",
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": null
        }
      ],
      "schema": {
        "pandas": {
          "col": "object"
        },
        "pyspark": {
          "fields": [
            {
              "name": "col",
              "type": "void"
            }
          ],
          "type": "struct"
        }
      }
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "string",
            "format": "date"
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": null,
          "errors": {}
        }
      ]
    }
  },
  {
    "description": "cast('2025-01-23' as date) => date('2025-01-23')",
    "engines": [
      "pandas"
    ],
    "given": {
      "data": [
        {
          "col": "2025-01-23"
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "string",
            "format": "date"
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": "2025-01-23 00:00:00",
          "errors": {}
        }
      ]
    }
  },
  {
    "description": "cast('2025-01-23' as date) => date('2025-01-23')",
    "engines": [
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": "2025-01-23"
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "string",
            "format": "date"
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": "2025-01-23",
          "errors": {}
        }
      ]
    }
  },
  {
    "description": "cast('2025-01-23T12:34:56' as date) => date('2025-01-23')",
    "engines": [
      "pandas"
    ],
    "given": {
      "data": [
        {
          "col": "2025-01-23T12:34:56"
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "string",
            "format": "date"
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": "2025-01-23 00:00:00",
          "errors": {}
        }
      ]
    }
  },
  {
    "description": "cast('2025-01-23T12:34:56' as date) => date('2025-01-23')",
    "engines": [
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": "2025-01-23T12:34:56"
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "string",
            "format": "date"
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": "2025-01-23",
          "errors": {}
        }
      ]
    }
  },
  {
    "description": "cast('foo' as date) => null, error is raised",
    "engines": [
      "pandas",
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": "foo"
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "string",
            "format": "date"
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": null,
          "errors": {
            "col": {
              "details": [
                {
                  "type": "date_parsing",
                  "msg": "Input should be a valid date, unable to parse string as a date"
                }
              ],
              "original": "\"foo\""
            }
          }
        }
      ]
    }
  },
  {
    "description": "cast(true as date) => null, error is raised",
    "engines": [
      "pandas",
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": true
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "string",
            "format": "date"
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": null,
          "errors": {
            "col": {
              "details": [
                {
                  "type": "date_type",
                  "msg": "Input should be a valid date"
                }
              ],
              "original": "true"
            }
          }
        }
      ]
    }
  },
  {
    "description": "cast('2025-01-23' as date) => date('2025-01-23')",
    "engines": [
      "pyspark_api"
    ],
    "given": {
      "data": [
        [
          "2025-01-23",
          []
        ]
      ],
      "schema": {
        "fields": [
          {
            "name": "col",
            "type": "string"
          },
          {
            "name": "errors_col",
            "type": {
              "type": "array",
              "elementType": "void",
              "containsNull": false
            }
          }
        ]
      }
    },
    "when": {
      "args": {}
    },
    "then": {
      "data": [
        {
          "col": "2025-01-23",
          "col_bak": "2025-01-23",
          "errors_col": [
            null
          ]
        }
      ],
      "schema": {
        "fields": [
          {
            "name": "col",
            "type": "date"
          },
          {
            "name": "errors_col",
            "type": {
              "type": "array",
              "elementType": {
                "fields": [
                  {
                    "name": "type",
                    "type": "string"
                  },
                  {
                    "name": "msg",
                    "type": "string"
                  }
                ],
                "type": "struct"
              },
              "containsNull": true
            }
          },
          {
            "name": "col_bak",
            "type": "string"
          }
        ]
      }
    }
  },
  {
    "description": "cast('2025-01-23T12:34:56.000Z' as date) => date('2025-01-23')",
    "engines": [
      "pyspark_api"
    ],
    "given": {
      "data": [
        [
          "2025-01-23T12:34:56.000Z",
          []
        ]
      ],
      "schema": {
        "fields": [
          {
            "name": "col",
            "type": "string"
          },
          {
            "name": "errors_col",
            "type": {
              "type": "array",
              "elementType": "void",
              "containsNull": false
            }
          }
        ]
      }
    },
    "when": {
      "args": {}
    },
    "then": {
      "data": [
        {
          "col": "2025-01-23",
          "col_bak": "2025-01-23T12:34:56.000Z",
          "errors_col": [
            null
          ]
        }
      ],
      "schema": {
        "fields": [
          {
            "name": "col",
            "type": "date"
          },
          {
            "name": "errors_col",
            "type": {
              "type": "array",
              "elementType": {
                "fields": [
                  {
                    "name": "type",
                    "type": "string"
                  },
                  {
                    "name": "msg",
                    "type": "string"
                  }
                ],
                "type": "struct"
              },
              "containsNull": true
            }
          },
          {
            "name": "col_bak",
            "type": "string"
          }
        ]
      }
    }
  },
  {
    "description": "cast('foo' as date) => null, error is raised",
    "engines": [
      "pyspark_api"
    ],
    "given": {
      "data": [
        [
          "foo",
          []
        ]
      ],
      "schema": {
        "fields": [
          {
            "name": "col",
            "type": "string"
          },
          {
            "name": "errors_col",
            "type": {
              "type": "array",
              "elementType": "void",
              "containsNull": false
            }
          }
        ]
      }
    },
    "when": {
      "args": {}
    },
    "then": {
      "data": [
        {
          "col": null,
          "col_bak": "foo",
          "errors_col": [
            {
              "type": "date_parsing",
              "msg": "Input should be a valid date, unable to parse string as a date"
            }
          ]
        }
      ],
      "schema": {
        "fields": [
          {
            "name": "col",
            "type": "date"
          },
          {
            "name": "errors_col",
            "type": {
              "type": "array",
              "elementType": {
                "fields": [
                  {
                    "name": "type",
                    "type": "string"
                  },
                  {
                    "name": "msg",
                    "type": "string"
                  }
                ],
                "type": "struct"
              },
              "containsNull": true
            }
          },
          {
            "name": "col_bak",
            "type": "string"
          }
        ]
      }
    }
  },
  {
    "description": "cast(123 as date) => null, error is raised",
    "engines": [
      "pyspark_api"
    ],
    "given": {
      "data": [
        [
          123,
          []
        ]
      ],
      "schema": {
        "fields": [
          {
            "name": "col",
            "type": "integer"
          },
          {
            "name": "errors_col",
            "type": {
              "type": "array",
              "elementType": "void",
              "containsNull": false
            }
          }
        ]
      }
    },
    "when": {
      "args": {}
    },
    "then": {
      "data": [
        {
          "col": null,
          "col_bak": 123,
          "errors_col": [
            {
              "type": "date_type",
              "msg": "Input should be a valid date"
            }
          ]
        }
      ],
      "schema": {
        "fields": [
          {
            "name": "col",
            "type": "date"
          },
          {
            "name": "errors_col",
            "type": {
              "type": "array",
              "elementType": {
                "fields": [
                  {
                    "name": "type",
                    "type": "string"
                  },
                  {
                    "name": "msg",
                    "type": "string"
                  }
                ],
                "type": "struct"
              },
              "containsNull": true
            }
          },
          {
            "name": "col_bak",
            "type": "integer"
          }
        ]
      }
    }
  },
  {
    "description": "cast(null <object> as date) => null",
    "engines": [
      "pandas_api"
    ],
    "given": {
      "data": [
        {
          "col": null
        }
      ],
      "dtype": "object"
    },
    "when": {
      "args": {}
    },
    "then": {
      "data": [
        null
      ],
      "dtype": "datetime64[s]",
      "masks": {
        "col": [
          false
        ]
      },
      "errors": {
      }
    }
  },
  {
    "description": "cast('2025/05/27' <object> as date) => pd.Timestamp('2025-05-27')",
    "engines": [
      "pandas_api"
    ],
    "given": {
      "data": [
        {
          "col": "2025/05/27"
        }
      ],
      "dtype": "object"
    },
    "when": {
      "args": {}
    },
    "then": {
      "data": [
        "pd.Timestamp('2025-05-27')"
      ],
      "dtype": "datetime64[s]",
      "masks": {
        "col": [
          false
        ]
      },
      "errors": {
      }
    }
  },
  {
    "description": "cast('2025/05/27' <string[python]> as date) => pd.Timestamp('2025-05-27')",
    "engines": [
      "pandas_api"
    ],
    "given": {
      "data": [
        {
          "col": "2025/05/27"
        }
      ],
      "dtype": "string[python]"
    },
    "when": {
      "args": {}
    },
    "then": {
      "data": [
        "pd.Timestamp('2025-05-27')"
      ],
      "dtype": "datetime64[s]",
      "masks": {
        "col": [
          false
        ]
      },
      "errors": {
      }
    }
  },
  {
    "description": "cast('27/05/2025' <string[python]> as date) => pd.Timestamp('2025-05-27')",
    "engines": [
      "pandas_api"
    ],
    "given": {
      "data": [
        {
          "col": "27/05/2025"
        }
      ],
      "dtype": "string[python]"
    },
    "when": {
      "args": {}
    },
    "then": {
      "data": [
        "pd.Timestamp('2025-05-27')"
      ],
      "dtype": "datetime64[s]",
      "masks": {
        "col": [
          false
        ]
      },
      "errors": {
      }
    }
  },
  {
    "description": "cast('05/27/2025' <string[python]> as date) => pd.Timestamp('2025-05-27')",
    "engines": [
      "pandas_api"
    ],
    "given": {
      "data": [
        {
          "col": "05/27/2025"
        }
      ],
      "dtype": "string[python]"
    },
    "when": {
      "args": {}
    },
    "then": {
      "data": [
        "pd.Timestamp('2025-05-27')"
      ],
      "dtype": "datetime64[s]",
      "masks": {
        "col": [
          false
        ]
      },
      "errors": {
      }
    }
  },
  {
    "description": "cast('2025-05-27' <string[python]> as date) => pd.Timestamp('2025-05-27')",
    "engines": [
      "pandas_api"
    ],
    "given": {
      "data": [
        {
          "col": "2025-05-27"
        }
      ],
      "dtype": "string[python]"
    },
    "when": {
      "args": {}
    },
    "then": {
      "data": [
        "pd.Timestamp('2025-05-27')"
      ],
      "dtype": "datetime64[s]",
      "masks": {
        "col": [
          false
        ]
      },
      "errors": {
      }
    }
  },
  {
    "description": "cast('2025-05-27 12:34:56' <string[python]> as date) => pd.Timestamp('2025-05-27')",
    "engines": [
      "pandas_api"
    ],
    "given": {
      "data": [
        {
          "col": "2025-05-27 12:34:56"
        }
      ],
      "dtype": "string[python]"
    },
    "when": {
      "args": {}
    },
    "then": {
      "data": [
        "pd.Timestamp('2025-05-27')"
      ],
      "dtype": "datetime64[s]",
      "masks": {
        "col": [
          false
        ]
      },
      "errors": {
      }
    }
  },
  {
    "description": "cast(pd.Timestamp('2025-05-27 12:34:56') <datetime64[s]> as date) => pd.Timestamp('2025-05-27')",
    "engines": [
      "pandas_api"
    ],
    "given": {
      "data": [
        {
          "col": "pd.Timestamp('2025-05-27 12:34:56')"
        }
      ],
      "dtype": "datetime64[s]"
    },
    "when": {
      "args": {}
    },
    "then": {
      "data": [
        "pd.Timestamp('2025-05-27')"
      ],
      "dtype": "datetime64[s]",
      "masks": {
        "col": [
          false
        ]
      },
      "errors": {
      }
    }
  },
  {
    "description": "cast('foo' <string[python]> as date) => null, error is raised",
    "engines": [
      "pandas_api"
    ],
    "given": {
      "data": [
        {
          "col": "foo"
        }
      ],
      "dtype": "string[python]"
    },
    "when": {
      "args": {}
    },
    "then": {
      "data": [
        null
      ],
      "dtype": "datetime64[s]",
      "masks": {
        "col": [
          true
        ]
      },
      "errors": {
        "0": {
          "col": {
            "details": [
              {
                "type": "date_parsing",
                "msg": "Input should be a valid date, unable to parse string as a date"
              }
            ]
          }
        }
      }
    }
  },
  {
    "description": "cast({foo='bar'} <object> as date) => null, error is raised",
    "engines": [
      "pandas_api"
    ],
    "given": {
      "data": [
        {
          "col": {
            "foo": "bar"
          }
        }
      ],
      "dtype": "object"
    },
    "when": {
      "args": {}
    },
    "then": {
      "data": [
        null
      ],
      "dtype": "datetime64[s]",
      "masks": {
        "col": [
          true
        ]
      },
      "errors": {
        "0": {
          "col": {
            "details": [
              {
                "type": "date_type",
                "msg": "Input should be a valid date"
              }
            ]
          }
        }
      }
    }
  },
  {
    "description": "cast(1748383303000000000 <Int64> as date) => null, error is raised",
    "engines": [
      "pandas_api"
    ],
    "given": {
      "data": [
        {
          "col": 1748383303000000000
        }
      ],
      "dtype": "Int64"
    },
    "when": {
      "args": {}
    },
    "then": {
      "data": [
        null
      ],
      "dtype": "datetime64[s]",
      "masks": {
        "col": [
          true
        ]
      },
      "errors": {
        "0": {
          "col": {
            "details": [
              {
                "type": "date_type",
                "msg": "Input should be a valid date"
              }
            ]
          }
        }
      }
    }
  },
  {
    "description": "cast({col.col1.col2.col3=null} as struct<date>) => {col.col1.col2=col3=null}",
    "engines": [
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": {
            "col1": {
              "col2": {
                "col3": null
              }
            }
          }
        }
      ],
      "schema": {
        "pyspark": {
          "fields": [
            {
              "name": "col",
              "type": {
                "fields": [
                  {
                    "name": "col1",
                    "type": {
                      "fields": [
                        {
                          "name": "col2",
                          "type": {
                            "fields": [
                              {
                                "name": "col3",
                                "type": "string"
                              }
                            ],
                            "type": "struct"
                          }
                        }
                      ],
                      "type": "struct"
                    }
                  }
                ],
                "type": "struct"
              }
            }
          ]
        }
      }
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "object",
            "properties": {
              "col1": {
                "type": "object",
                "properties": {
                  "col2": {
                    "type": "object",
                    "properties": {
                      "col3": {
                        "type": "string",
                        "format": "date"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": {
            "col1": {
              "col2": {
                "col3": null
              }
            }
          },
          "errors": {}
        }
      ]
    }
  },
  {
    "description": "cast({col.col1.col2.col3='2025-01-23T12:34:56'} as struct<date>) => {col.col1.col2.col3='2025-01-23}",
    "engines": [
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": {
            "col1": {
              "col2": {
                "col3": "2025-01-23T12:34:56"
              }
            }
          }
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "object",
            "properties": {
              "col1": {
                "type": "object",
                "properties": {
                  "col2": {
                    "type": "object",
                    "properties": {
                      "col3": {
                        "type": "string",
                        "format": "date"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": {
            "col1": {
              "col2": {
                "col3": "2025-01-23"
              }
            }
          },
          "errors": {}
        }
      ]
    }
  },
  {
    "description": "cast({col.col1.col2.col3='abc'} as struct<date>) => {col.col1.col2.col3=null}, error is raised",
    "engines": [
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": {
            "col1": {
              "col2": {
                "col3": "abc"
              }
            }
          }
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "object",
            "properties": {
              "col1": {
                "type": "object",
                "properties": {
                  "col2": {
                    "type": "object",
                    "properties": {
                      "col3": {
                        "type": "string",
                        "format": "date"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": {
            "col1": {
              "col2": {
                "col3": null
              }
            }
          },
          "errors": {
            "col.col1.col2.col3": {
              "details": [
                {
                  "type": "date_parsing",
                  "msg": "Input should be a valid date, unable to parse string as a date"
                }
              ],
              "original": "\"abc\""
            }
          }
        }
      ]
    }
  },
  {
    "description": "cast(['2025-05-23', '2025-05-23T12:34:56', null] as array<date>) => [date(2025-05-23), date(2025-05-23), null]",
    "engines": [
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": [
            "2025-05-23",
            "2025-05-23T12:34:56",
            null
          ]
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "array",
            "items": {
              "type": [
                "string",
                "null"
              ],
              "format": "date"
            }
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": [
            "2025-05-23",
            "2025-05-23",
            null
          ],
          "errors": {}
        }
      ]
    }
  },
  {
    "description": "cast([{co1='foo'}] as array<date>) => [null], error is raised",
    "engines": [
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": [
            {
              "co1": "foo"
            }
          ]
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date"
            }
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": [
            null
          ],
          "errors": {
            "col[]": {
              "details": [
                {
                  "loc": [
                    0
                  ],
                  "msg": "Input should be a valid date",
                  "type": "date_type"
                }
              ],
              "original": "[{\"co1\":\"foo\"}]"
            }
          }
        }
      ]
    }
  },
  {
    "description": "cast(['2025-05-23', '2025-05-23T12:34:56', null, 'foo'] as array<date>) => [date(2025-05-23), date(2025-05-23), null, null], error is raised",
    "engines": [
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": [
            "2025-05-23",
            "2025-05-23T12:34:56",
            null,
            "foo"
          ]
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "array",
            "items": {
              "type": [
                "string",
                "null"
              ],
              "format": "date"
            }
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": [
            "2025-05-23",
            "2025-05-23",
            null,
            null
          ],
          "errors": {
            "col[]": {
              "details": [
                {
                  "loc": [
                    3
                  ],
                  "msg": "Input should be a valid date, unable to parse string as a date",
                  "type": "date_parsing"
                }
              ],
              "original": "[\"2025-05-23\",\"2025-05-23T12:34:56\",null,\"foo\"]"
            }
          }
        }
      ]
    }
  }
]
