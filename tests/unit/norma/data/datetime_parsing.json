[
  {
    "description": "cast(null as datetime) => null",
    "engines": [
      "pandas",
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": null
        }
      ],
      "schema": {
        "pandas": {
          "col": "object"
        },
        "pyspark": {
          "fields": [
            {
              "name": "col",
              "type": "void"
            }
          ],
          "type": "struct"
        }
      }
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": null,
          "errors": {}
        }
      ]
    }
  },
  {
    "description": "cast('2025-01-23 12:34:56' as date) => datetime('2025-01-23 12:34:56')",
    "engines": [
      "pandas"
    ],
    "given": {
      "data": [
        {
          "col": "2025-01-23 12:34:56"
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": "2025-01-23 12:34:56+00:00",
          "errors": {}
        }
      ]
    }
  },
  {
    "description": "cast('2025-01-23 12:34:56' as date) => datetime('2025-01-23 12:34:56')",
    "engines": [
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": "2025-01-23 12:34:56"
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": "2025-01-23T12:34:56.000Z",
          "errors": {}
        }
      ]
    }
  },
  {
    "description": "cast('2025-01-23T12:34:56Z' as date) => datetime('2025-01-23 12:34:56')",
    "engines": [
      "pandas"
    ],
    "given": {
      "data": [
        {
          "col": "2025-01-23T12:34:56Z"
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": "2025-01-23 12:34:56+00:00",
          "errors": {}
        }
      ]
    }
  },
  {
    "description": "cast('2025-01-23T12:34:56Z' as date) => datetime('2025-01-23 12:34:56')",
    "engines": [
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": "2025-01-23T12:34:56Z"
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": "2025-01-23T12:34:56.000Z",
          "errors": {}
        }
      ]
    }
  },
  {
    "description": "cast('2025-01-23T12:34:56.123Z' as date) => datetime('2025-01-23 12:34:56.123000+00:00')",
    "engines": [
      "pandas"
    ],
    "given": {
      "data": [
        {
          "col": "2025-01-23T12:34:56.123Z"
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": "2025-01-23 12:34:56.123000+00:00",
          "errors": {}
        }
      ]
    }
  },
  {
    "description": "cast('2025-01-23T12:34:56.123Z' as date) => datetime('2025-01-23 12:34:56.123000+00:00')",
    "engines": [
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": "2025-01-23T12:34:56.123Z"
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": "2025-01-23T12:34:56.123Z",
          "errors": {}
        }
      ]
    }
  },
  {
    "description": "cast('2025-01-23 12:34:56+02:00' as date) => datetime('2025-01-23 12:34:56+02:00')",
    "engines": [
      "pandas"
    ],
    "given": {
      "data": [
        {
          "col": "2025-01-23 12:34:56+02:00"
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": "2025-01-23 10:34:56+00:00",
          "errors": {}
        }
      ]
    }
  },
  {
    "description": "cast('2025-01-23 12:34:56+02:00' as date) => datetime('2025-01-23 12:34:56+02:00')",
    "engines": [
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": "2025-01-23 12:34:56+02:00"
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": "2025-01-23T10:34:56.000Z",
          "errors": {}
        }
      ]
    }
  },
  {
    "description": "cast('foo' as date) => null, error is raised",
    "engines": [
      "pandas",
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": "foo"
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": null,
          "errors": {
            "col": {
              "details": [
                {
                  "type": "datetime_parsing",
                  "msg": "Input should be a valid datetime, unable to parse string as a datetime"
                }
              ],
              "original": "\"foo\""
            }
          }
        }
      ]
    }
  },
  {
    "description": "cast(true as date) => null, error is raised",
    "engines": [
      "pandas",
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": true
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": null,
          "errors": {
            "col": {
              "details": [
                {
                  "type": "datetime_type",
                  "msg": "Input should be a valid datetime"
                }
              ],
              "original": "true"
            }
          }
        }
      ]
    }
  }
]
