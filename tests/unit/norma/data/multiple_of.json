[
  {
    "description": "column is null, ignored",
    "engines": [
      "pandas",
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": null
        }
      ],
      "schema": {
        "pandas": {
          "col": "Int64"
        },
        "pyspark": {
          "fields": [
            {
              "name": "col",
              "type": "void"
            }
          ],
          "type": "struct"
        }
      }
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "integer",
            "multipleOf": 10
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": null,
          "errors": {}
        }
      ]
    }
  },
  {
    "description": "30 is multiple of 10",
    "engines": [
      "pandas",
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": 30
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "integer",
            "multipleOf": 10
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": 30,
          "errors": {}
        }
      ]
    }
  },
  {
    "description": "33 is multiple of 10, error is raised",
    "engines": [
      "pandas",
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": 33
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "integer",
            "multipleOf": 10
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": null,
          "errors": {
            "col": {
              "details": [
                {
                  "type": "multiple_of",
                  "msg": "Input should be a multiple of 10"
                }
              ],
              "original": "33"
            }
          }
        }
      ]
    }
  },
  {
    "description": "33 is multiple of 3",
    "engines": [
      "pandas",
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": 33
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "integer",
            "multipleOf": 3
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": 33,
          "errors": {}
        }
      ]
    }
  },
  {
    "description": "7.5 is multiple of 2.5",
    "engines": [
      "pandas",
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": 7.5
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "number",
            "multipleOf": 2.5
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": 7.5,
          "errors": {}
        }
      ]
    }
  },
  {
    "description": "7.500001 is multiple of 2.5, error is raised",
    "engines": [
      "pandas",
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": 7.500001
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "number",
            "multipleOf": 2.5
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": null,
          "errors": {
            "col": {
              "details": [
                {
                  "type": "multiple_of",
                  "msg": "Input should be a multiple of 2.5"
                }
              ],
              "original": "7.500001"
            }
          }
        }
      ]
    }
  },
  {
    "description": "'abc' is multiple of 3, exception is raised",
    "engines": [
      "pandas",
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": "abc"
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "string",
            "multipleOf": 3
          }
        }
      }
    },
    "then": {
      "raises": {
        "type": "ValueError",
        "match": "multiple_of rule can only be applied to numeric columns"
      }
    }
  },
  {
    "description": "30 is multiple of 'abc', exception is raised",
    "engines": [
      "pandas",
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": 30
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "integer",
            "multipleOf": "abc"
          }
        }
      }
    },
    "then": {
      "raises": {
        "type": "ValueError",
        "match": "multiple_of must be an integer or a float"
      }
    }
  },
  {
    "description": "30 is multiple of null, exception is raised",
    "engines": [
      "pandas",
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": 30
        }
      ]
    },
    "when": {
      "schema": {
        "columns": {
          "col": {
            "dtype": "str",
            "rules": {
              "expr": "rules.multiple_of(None)"
            }
          }
        }
      }
    },
    "then": {
      "raises": {
        "type": "ValueError",
        "match": "multiple_of must not be None"
      }
    }
  },
  {
    "description": "33 is multiple of 3",
    "engines": [
      "pyspark_api"
    ],
    "given": {
      "data": [
        [
          33,
          []
        ]
      ],
      "schema": {
        "fields": [
          {
            "name": "col",
            "type": "integer"
          },
          {
            "name": "errors_col",
            "type": {
              "type": "array",
              "elementType": "void",
              "containsNull": false
            }
          }
        ]
      }
    },
    "when": {
      "args": {
        "multiple": 3
      }
    },
    "then": {
      "data": [
        {
          "col": 33,
          "errors_col": [
            null
          ]
        }
      ],
      "schema": {
        "fields": [
          {
            "name": "col",
            "type": "integer"
          },
          {
            "name": "errors_col",
            "type": {
              "type": "array",
              "elementType": {
                "fields": [
                  {
                    "name": "type",
                    "type": "string"
                  },
                  {
                    "name": "msg",
                    "type": "string"
                  }
                ],
                "type": "struct"
              },
              "containsNull": true
            }
          }
        ]
      }
    }
  },
  {
    "description": "2 is not multiple of 3, error is raised",
    "engines": [
      "pyspark_api"
    ],
    "given": {
      "data": [
        [
          2,
          []
        ]
      ],
      "schema": {
        "fields": [
          {
            "name": "col",
            "type": "integer"
          },
          {
            "name": "errors_col",
            "type": {
              "type": "array",
              "elementType": "void",
              "containsNull": false
            }
          }
        ]
      }
    },
    "when": {
      "args": {
        "multiple": 3
      }
    },
    "then": {
      "data": [
        {
          "col": 2,
          "errors_col": [
            {
              "type": "multiple_of",
              "msg": "Input should be a multiple of 3"
            }
          ]
        }
      ],
      "schema": {
        "fields": [
          {
            "name": "col",
            "type": "integer"
          },
          {
            "name": "errors_col",
            "type": {
              "type": "array",
              "elementType": {
                "fields": [
                  {
                    "name": "type",
                    "type": "string"
                  },
                  {
                    "name": "msg",
                    "type": "string"
                  }
                ],
                "type": "struct"
              },
              "containsNull": true
            }
          }
        ]
      }
    }
  },
  {
    "description": "33 <int64> is multiple of 3",
    "engines": [
      "pandas_api"
    ],
    "given": {
      "data": [
        {
          "col": 33
        }
      ],
      "dtype": "int64"
    },
    "when": {
      "args": {
        "multiple": 3
      }
    },
    "then": {
      "data": [
        33
      ],
      "dtype": "int64",
      "masks": {
        "col": [
          false
        ]
      },
      "errors": {
      }
    }
  },
  {
    "description": "2 <int64> is not multiple of 3, error is raised",
    "engines": [
      "pandas_api"
    ],
    "given": {
      "data": [
        {
          "col": 2
        }
      ],
      "dtype": "int64"
    },
    "when": {
      "args": {
        "multiple": 3
      }
    },
    "then": {
      "data": [
        2
      ],
      "dtype": "int64",
      "masks": {
        "col": [
          true
        ]
      },
      "errors": {
        "0": {
          "col": {
            "details": [
              {
                "type": "multiple_of",
                "msg": "Input should be a multiple of 3"
              }
            ]
          }
        }
      }
    }
  },
  {
    "description": "{col={col1=null}}, ignored",
    "engines": [
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": {
            "col1": null
          }
        }
      ],
      "schema": {
        "pyspark": {
          "fields": [
            {
              "name": "col",
              "type": {
                "fields": [
                  {
                    "name": "col1",
                    "type": "integer"
                  }
                ],
                "type": "struct"
              }
            }
          ]
        }
      }
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "object",
            "properties": {
              "col1": {
                "type": "integer",
                "multipleOf": 10
              }
            }
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": {
            "col1": null
          },
          "errors": {}
        }
      ]
    }
  },
  {
    "description": "{col={col1=30}} is multiple of 10",
    "engines": [
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": {
            "col1": 30
          }
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "object",
            "properties": {
              "col1": {
                "type": "integer",
                "multipleOf": 10
              }
            }
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": {
            "col1": 30
          },
          "errors": {}
        }
      ]
    }
  },
  {
    "description": "{col={col1=33}}) is multiple of 10, error is raised",
    "engines": [
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": {
            "col1": 33
          }
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "object",
            "properties": {
              "col1": {
                "type": "integer",
                "multipleOf": 10
              }
            }
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": {
            "col1": null
          },
          "errors": {
            "col.col1": {
              "details": [
                {
                  "type": "multiple_of",
                  "msg": "Input should be a multiple of 10"
                }
              ],
              "original": "33"
            }
          }
        }
      ]
    }
  }
]
