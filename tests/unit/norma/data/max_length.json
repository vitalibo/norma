[
  {
    "description": "len(null) <= 3",
    "engines": [
      "pandas",
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": null
        }
      ],
      "schema": {
        "pandas": {
          "col": "string[python]"
        },
        "pyspark": {
          "fields": [
            {
              "name": "col",
              "type": "void"
            }
          ],
          "type": "struct"
        }
      }
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "string",
            "maxLength": 3
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": null,
          "errors": {}
        }
      ]
    }
  },
  {
    "description": "len('ab') <= 3",
    "engines": [
      "pandas",
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": "ab"
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "string",
            "maxLength": 3
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": "ab",
          "errors": {}
        }
      ]
    }
  },
  {
    "description": "len('abc') <= 3",
    "engines": [
      "pandas",
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": "abc"
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "string",
            "maxLength": 3
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": "abc",
          "errors": {}
        }
      ]
    }
  },
  {
    "description": "len('abcd') <= 3, error is raised",
    "engines": [
      "pandas",
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": "abcd"
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "string",
            "maxLength": 3
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": null,
          "errors": {
            "col": {
              "details": [
                {
                  "type": "string_too_long",
                  "msg": "String should have at most 3 characters"
                }
              ],
              "original": "\"abcd\""
            }
          }
        }
      ]
    }
  },
  {
    "description": "len('ab') <= -1, exception is raised",
    "engines": [
      "pandas",
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": "ab"
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "string",
            "maxLength": -1
          }
        }
      }
    },
    "then": {
      "raises": {
        "type": "ValueError",
        "match": "max_length must be a non-negative integer"
      }
    }
  },
  {
    "description": "len('ab') <= 1.2, exception is raised",
    "engines": [
      "pandas",
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": "ab"
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "string",
            "maxLength": 1.2
          }
        }
      }
    },
    "then": {
      "raises": {
        "type": "ValueError",
        "match": "max_length must be an integer"
      }
    }
  },
  {
    "description": "len('ab') <= null, exception is raised",
    "engines": [
      "pandas",
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": "ab"
        }
      ]
    },
    "when": {
      "schema": {
        "columns": {
          "col": {
            "dtype": "str",
            "rules": {
              "expr": "rules.max_length(None)"
            }
          }
        }
      }
    },
    "then": {
      "raises": {
        "type": "ValueError",
        "match": "max_length must be an integer"
      }
    }
  },
  {
    "description": "len(123) <= 3, exception is raised",
    "engines": [
      "pandas",
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": 123
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "integer",
            "maxLength": 3
          }
        }
      }
    },
    "then": {
      "raises": {
        "type": "ValueError",
        "match": "max_length rule can only be applied to string columns"
      }
    }
  },
  {
    "description": "len('abc') <= 3",
    "engines": [
      "pyspark_api"
    ],
    "given": {
      "data": [
        [
          "abc",
          []
        ]
      ],
      "schema": {
        "fields": [
          {
            "name": "col",
            "type": "string"
          },
          {
            "name": "errors_col",
            "type": {
              "type": "array",
              "elementType": "void",
              "containsNull": false
            }
          }
        ]
      }
    },
    "when": {
      "args": {
        "value": 3
      }
    },
    "then": {
      "data": [
        {
          "col": "abc",
          "errors_col": [
            null
          ]
        }
      ],
      "schema": {
        "fields": [
          {
            "name": "col",
            "type": "string"
          },
          {
            "name": "errors_col",
            "type": {
              "type": "array",
              "elementType": {
                "fields": [
                  {
                    "name": "type",
                    "type": "string"
                  },
                  {
                    "name": "msg",
                    "type": "string"
                  }
                ],
                "type": "struct"
              },
              "containsNull": true
            }
          }
        ]
      }
    }
  },
  {
    "description": "len('abcd') <= 3, error is raised",
    "engines": [
      "pyspark_api"
    ],
    "given": {
      "data": [
        [
          "abcd",
          []
        ]
      ],
      "schema": {
        "fields": [
          {
            "name": "col",
            "type": "string"
          },
          {
            "name": "errors_col",
            "type": {
              "type": "array",
              "elementType": "void",
              "containsNull": false
            }
          }
        ]
      }
    },
    "when": {
      "args": {
        "value": 3
      }
    },
    "then": {
      "data": [
        {
          "col": "abcd",
          "errors_col": [
            {
              "type": "string_too_long",
              "msg": "String should have at most 3 characters"
            }
          ]
        }
      ],
      "schema": {
        "fields": [
          {
            "name": "col",
            "type": "string"
          },
          {
            "name": "errors_col",
            "type": {
              "type": "array",
              "elementType": {
                "fields": [
                  {
                    "name": "type",
                    "type": "string"
                  },
                  {
                    "name": "msg",
                    "type": "string"
                  }
                ],
                "type": "struct"
              },
              "containsNull": true
            }
          }
        ]
      }
    }
  },
  {
    "description": "len('abc') <= 3",
    "engines": [
      "pandas_api"
    ],
    "given": {
      "data": [
        {
          "col": "abc"
        }
      ],
      "dtype": "string[python]"
    },
    "when": {
      "args": {
        "value": 3
      }
    },
    "then": {
      "data": [
        "abc"
      ],
      "dtype": "string[python]",
      "masks": {
        "col": [
          false
        ]
      },
      "errors": {
      }
    }
  },
  {
    "description": "len('abcd') <= 3, error is raised",
    "engines": [
      "pandas_api"
    ],
    "given": {
      "data": [
        {
          "col": "abcd"
        }
      ],
      "dtype": "string[python]"
    },
    "when": {
      "args": {
        "value": 3
      }
    },
    "then": {
      "data": [
        "abcd"
      ],
      "dtype": "string[python]",
      "masks": {
        "col": [
          true
        ]
      },
      "errors": {
        "0": {
          "col": {
            "details": [
              {
                "type": "string_too_long",
                "msg": "String should have at most 3 characters"
              }
            ]
          }
        }
      }
    }
  },
  {
    "description": "len({col.col1=null}) <= 3",
    "engines": [
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": {
            "col1": null
          }
        }
      ],
      "schema": {
        "pyspark": {
          "fields": [
            {
              "name": "col",
              "type": {
                "fields": [
                  {
                    "name": "col1",
                    "type": "string"
                  }
                ],
                "type": "struct"
              }
            }
          ]
        }
      }
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "object",
            "properties": {
              "col1": {
                "type": "string",
                "maxLength": 3
              }
            }
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": {
            "col1": null
          },
          "errors": {}
        }
      ]
    }
  },
  {
    "description": "len({col.col1='ab'}) <= 3",
    "engines": [
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": {
            "col1": "abc"
          }
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "object",
            "properties": {
              "col1": {
                "type": "string",
                "maxLength": 3
              }
            }
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": {
            "col1": "abc"
          },
          "errors": {}
        }
      ]
    }
  },
  {
    "description": "len({col.col1='abcd'}) <= 3, error is raised",
    "engines": [
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": {
            "col1": "abcd"
          }
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "object",
            "properties": {
              "col1": {
                "type": "string",
                "maxLength": 3
              }
            }
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": {
            "col1": null
          },
          "errors": {
            "col.col1": {
              "details": [
                {
                  "type": "string_too_long",
                  "msg": "String should have at most 3 characters"
                }
              ],
              "original": "\"abcd\""
            }
          }
        }
      ]
    }
  },
  {
    "description": "len(['ab', 'cd', 'efg']) <= 3",
    "engines": [
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": {
            "col1": {
              "col2": [
                "ab",
                "cd",
                "efg"
              ]
            }
          }
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "object",
            "properties": {
              "col1": {
                "type": "object",
                "properties": {
                  "col2": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "maxLength": 3
                  }
                }
              }
            }
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": {
            "col1": {
              "col2": [
                "ab",
                "cd",
                "efg"
              ]
            }
          },
          "errors": {
          }
        }
      ]
    }
  },
  {
    "description": "len(['ab', 'cd', 'ef', 'gh']) <= 3, error is raised",
    "engines": [
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": {
            "col1": {
              "col2": [
                "ab",
                "cd",
                "ef",
                "gh"
              ]
            }
          }
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "object",
            "properties": {
              "col1": {
                "type": "object",
                "properties": {
                  "col2": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "maxLength": 3
                  }
                }
              }
            }
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": {
            "col1": {
              "col2": null
            }
          },
          "errors": {
            "col.col1.col2": {
              "details": [
                {
                  "indexes": null,
                  "msg": "Array should have at most 3 items",
                  "type": "too_long"
                }
              ],
              "original": "[\"ab\",\"cd\",\"ef\",\"gh\"]"
            }
          }
        }
      ]
    }
  },
  {
    "description": "len(each(['ab', 'a'])) <= 3",
    "engines": [
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": {
            "col1": {
              "col2": [
                "ab",
                "a"
              ]
            }
          }
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "object",
            "properties": {
              "col1": {
                "type": "object",
                "properties": {
                  "col2": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "maxLength": 3
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": {
            "col1": {
              "col2": [
                "ab",
                "a"
              ]
            }
          },
          "errors": {
          }
        }
      ]
    }
  },
  {
    "description": "len(each(['ab', 'abcd', 'a', 'abc'])) <= 3, error is raised",
    "engines": [
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col": {
            "col1": {
              "col2": [
                "ab",
                "abcd",
                "a",
                "abc"
              ]
            }
          }
        }
      ]
    },
    "when": {
      "json_schema": {
        "type": "object",
        "properties": {
          "col": {
            "type": "object",
            "properties": {
              "col1": {
                "type": "object",
                "properties": {
                  "col2": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "maxLength": 3
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col": {
            "col1": {
              "col2": [
                "ab",
                null,
                "a",
                "abc"
              ]
            }
          },
          "errors": {
            "col.col1.col2": {
              "details": [
                {
                  "indexes": [
                    1
                  ],
                  "msg": "String should have at most 3 characters",
                  "type": "string_too_long"
                }
              ],
              "original": "[\"ab\",\"abcd\",\"a\",\"abc\"]"
            }
          }
        }
      ]
    }
  }
]
