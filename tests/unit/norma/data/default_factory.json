[
  {
    "description": "fill missing values with derived",
    "engines": [
      "pandas"
    ],
    "given": {
      "data": [
        {
          "col1": "foo",
          "col2": "bar"
        },
        {
          "col1": null,
          "col2": "qux"
        },
        {
          "col1": "baz",
          "col2": null
        },
        {
          "col1": null,
          "col2": null
        }
      ]
    },
    "when": {
      "schema": {
        "columns": {
          "col1": {
            "dtype": "str",
            "default_factory": {
              "expr": "lambda x: x['col2'].str.upper()"
            }
          },
          "col2": {
            "dtype": "str",
            "pattern": "bar|qux",
            "default": "<default>"
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col1": "foo",
          "col2": "bar",
          "errors": {}
        },
        {
          "col1": "QUX",
          "col2": "qux",
          "errors": {}
        },
        {
          "col1": "baz",
          "col2": "<default>",
          "errors": {}
        },
        {
          "col1": "<DEFAULT>",
          "col2": "<default>",
          "errors": {}
        }
      ]
    }
  },
  {
    "description": "fill missing values with derived",
    "engines": [
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col1": "foo",
          "col2": "bar"
        },
        {
          "col1": null,
          "col2": "qux"
        },
        {
          "col1": "baz",
          "col2": null
        },
        {
          "col1": null,
          "col2": null
        }
      ]
    },
    "when": {
      "schema": {
        "columns": {
          "col1": {
            "dtype": "str",
            "default_factory": {
              "expr": "lambda x: fn.upper(fn.col('col2'))"
            }
          },
          "col2": {
            "dtype": "str",
            "pattern": "bar|qux",
            "default": "<default>"
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col1": "foo",
          "col2": "bar",
          "errors": {}
        },
        {
          "col1": "QUX",
          "col2": "qux",
          "errors": {}
        },
        {
          "col1": "baz",
          "col2": "<default>",
          "errors": {}
        },
        {
          "col1": "<DEFAULT>",
          "col2": "<default>",
          "errors": {}
        }
      ]
    }
  },
  {
    "description": "fill missing values in array with derived",
    "engines": [
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col1": "foo",
          "col2": [
            "bar",
            null,
            "baz",
            null
          ]
        }
      ]
    },
    "when": {
      "schema": {
        "columns": {
          "col1": {
            "dtype": "str"
          },
          "col2": {
            "dtype": "array",
            "inner_schema": {
              "expr": "Column('str', default_factory=lambda x: fn.upper(fn.col('col1')))"
            }
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col1": "foo",
          "col2": [
            "bar",
            "FOO",
            "baz",
            "FOO"
          ],
          "errors": {}
        }
      ]
    }
  },
  {
    "description": "fill missing values in array of objects with derived",
    "engines": [
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col1": "foo",
          "col2": [
            {
              "col3": "bar"
            },
            {
              "col3": null
            },
            {
              "col3": "baz"
            },
            {
              "col3": null
            }
          ]
        }
      ]
    },
    "when": {
      "schema": {
        "columns": {
          "col1": {
            "dtype": "str"
          },
          "col2": {
            "dtype": "array",
            "inner_schema": {
              "expr": "Column('object', inner_schema=Schema({'col3': Column('str', default_factory=lambda x: fn.upper(fn.col('col1')))}))"
            }
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col1": "foo",
          "col2": [
            {
              "col3": "bar"
            },
            {
              "col3": "FOO"
            },
            {
              "col3": "baz"
            },
            {
              "col3": "FOO"
            }
          ],
          "errors": {}
        }
      ]
    }
  }
]
