[
  {
    "description": "$.col1 ?: df['col2'].str.upper()",
    "engines": [
      "pandas"
    ],
    "given": {
      "data": [
        {
          "col1": "foo",
          "col2": "bar"
        },
        {
          "col1": null,
          "col2": "qux"
        },
        {
          "col1": "baz",
          "col2": null
        },
        {
          "col1": null,
          "col2": null
        }
      ]
    },
    "when": {
      "schema": {
        "columns": {
          "col1": {
            "dtype": "str",
            "default_factory": {
              "expr": "lambda x: x['col2'].str.upper()"
            }
          },
          "col2": {
            "dtype": "str",
            "pattern": "bar|qux",
            "default": "<default>"
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col1": "foo",
          "col2": "bar",
          "errors": {}
        },
        {
          "col1": "QUX",
          "col2": "qux",
          "errors": {}
        },
        {
          "col1": "baz",
          "col2": "<default>",
          "errors": {}
        },
        {
          "col1": "<DEFAULT>",
          "col2": "<default>",
          "errors": {}
        }
      ]
    }
  },
  {
    "description": "$.col1 ?: fn.upper(fn.col('col2'))",
    "engines": [
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col1": "foo",
          "col2": "bar"
        },
        {
          "col1": null,
          "col2": "qux"
        },
        {
          "col1": "baz",
          "col2": null
        },
        {
          "col1": null,
          "col2": null
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col1",
              "type": "string"
            },
            {
              "name": "col2",
              "type": "string"
            }
          ]
        }
      }
    },
    "when": {
      "schema": {
        "columns": {
          "col1": {
            "dtype": "str",
            "default_factory": {
              "expr": "lambda x: fn.upper(fn.col('col2'))"
            }
          },
          "col2": {
            "dtype": "str",
            "pattern": "bar|qux",
            "default": "<default>"
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col1": "foo",
          "col2": "bar",
          "errors": {}
        },
        {
          "col1": "QUX",
          "col2": "qux",
          "errors": {}
        },
        {
          "col1": "baz",
          "col2": "<default>",
          "errors": {}
        },
        {
          "col1": "<DEFAULT>",
          "col2": "<default>",
          "errors": {}
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col1",
              "type": "string",
              "nullable": false
            },
            {
              "name": "col2",
              "type": "string",
              "nullable": false
            },
            {
              "name": "errors",
              "nullable": false,
              "type": {
                "keyType": "string",
                "type": "map",
                "valueContainsNull": true,
                "valueType": {
                  "type": "struct",
                  "fields": [
                    {
                      "name": "details",
                      "nullable": false,
                      "type": {
                        "containsNull": true,
                        "type": "array",
                        "elementType": {
                          "type": "struct",
                          "fields": [
                            {
                              "name": "type",
                              "type": "string"
                            },
                            {
                              "name": "msg",
                              "type": "string"
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "original",
                      "type": "string"
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "description": "$.col1.col2.col3 ?: fn.upper(fn.col('col4.col5'))",
    "engines": [
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col1": {
            "col2": {
              "col3": "foo"
            }
          },
          "col4": {
            "col5": "bar"
          }
        },
        {
          "col1": null,
          "col4": {
            "col5": "qux"
          }
        },
        {
          "col1": {
            "col2": null
          },
          "col4": null
        },
        {
          "col1": null,
          "col4": null
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col1",
              "type": {
                "type": "struct",
                "fields": [
                  {
                    "name": "col2",
                    "type": {
                      "type": "struct",
                      "fields": [
                        {
                          "name": "col3",
                          "type": "string"
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "name": "col4",
              "type": {
                "type": "struct",
                "fields": [
                  {
                    "name": "col5",
                    "type": "string"
                  }
                ]
              }
            }
          ]
        }
      }
    },
    "when": {
      "schema": {
        "columns": {
          "col1": {
            "dtype": "object",
            "inner_schema": {
              "expr": "Schema({'col2': Column('object', inner_schema=Schema({'col3': Column('str', default_factory=lambda x: fn.upper(fn.col('col4.col5')))}))})"
            }
          },
          "col4": {
            "dtype": "object",
            "inner_schema": {
              "expr": "Schema({'col5': Column('str')})"
            }
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col1": {
            "col2": {
              "col3": "foo"
            }
          },
          "col4": {
            "col5": "bar"
          },
          "errors": {}
        },
        {
          "col1": {
            "col2": {
              "col3": "QUX"
            }
          },
          "col4": {
            "col5": "qux"
          },
          "errors": {}
        },
        {
          "col1": {
            "col2": {
              "col3": null
            }
          },
          "col4": {
            "col5": null
          },
          "errors": {}
        },
        {
          "col1": {
            "col2": {
              "col3": null
            }
          },
          "col4": {
            "col5": null
          },
          "errors": {}
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col1",
              "type": {
                "type": "struct",
                "fields": [
                  {
                    "name": "col2",
                    "type": {
                      "type": "struct",
                      "fields": [
                        {
                          "name": "col3",
                          "type": "string"
                        }
                      ]
                    },
                    "nullable": false
                  }
                ]
              },
              "nullable": false
            },
            {
              "name": "col4",
              "type": {
                "type": "struct",
                "fields": [
                  {
                    "name": "col5",
                    "type": "string"
                  }
                ]
              }
            },
            {
              "name": "errors",
              "nullable": false,
              "type": {
                "keyType": "string",
                "type": "map",
                "valueContainsNull": true,
                "valueType": {
                  "type": "struct",
                  "fields": [
                    {
                      "name": "details",
                      "nullable": false,
                      "type": {
                        "containsNull": true,
                        "type": "array",
                        "elementType": {
                          "type": "struct",
                          "fields": [
                            {
                              "name": "type",
                              "type": "string"
                            },
                            {
                              "name": "msg",
                              "type": "string"
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "original",
                      "type": "string"
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "description": "each($.col2[]) ?: fn.upper(fn.col('col1'))",
    "engines": [
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col1": "foo",
          "col2": [
            "bar",
            null,
            "baz",
            null
          ]
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col1",
              "type": "string"
            },
            {
              "name": "col2",
              "type": {
                "type": "array",
                "elementType": "string",
                "containsNull": true
              }
            }
          ]
        }
      }
    },
    "when": {
      "schema": {
        "columns": {
          "col1": {
            "dtype": "str"
          },
          "col2": {
            "dtype": "array",
            "inner_schema": {
              "expr": "Column('str', default_factory=lambda x: fn.upper(fn.col('col1')))"
            }
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col1": "foo",
          "col2": [
            "bar",
            "FOO",
            "baz",
            "FOO"
          ],
          "errors": {}
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col1",
              "type": "string"
            },
            {
              "name": "col2",
              "type": {
                "type": "array",
                "elementType": "string",
                "containsNull": true
              }
            },
            {
              "name": "errors",
              "nullable": false,
              "type": {
                "keyType": "string",
                "type": "map",
                "valueContainsNull": true,
                "valueType": {
                  "type": "struct",
                  "fields": [
                    {
                      "name": "details",
                      "nullable": false,
                      "type": {
                        "containsNull": true,
                        "type": "array",
                        "elementType": {
                          "type": "struct",
                          "fields": [
                            {
                              "name": "type",
                              "type": "string"
                            },
                            {
                              "name": "msg",
                              "type": "string"
                            },
                            {
                              "name": "loc",
                              "type": {
                                "containsNull": true,
                                "type": "array",
                                "elementType": "integer"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "original",
                      "type": "string"
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "description": "each($.col2[].col3) ?: fn.upper(fn.col('col1'))",
    "engines": [
      "pyspark"
    ],
    "given": {
      "data": [
        {
          "col1": "foo",
          "col2": [
            {
              "col3": "bar"
            },
            {
              "col3": null
            },
            {
              "col3": "baz"
            },
            {
              "col3": null
            }
          ]
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col1",
              "type": "string"
            },
            {
              "name": "col2",
              "type": {
                "type": "array",
                "elementType": {
                  "type": "struct",
                  "fields": [
                    {
                      "name": "col3",
                      "type": "string"
                    }
                  ]
                },
                "containsNull": true
              }
            }
          ]
        }
      }
    },
    "when": {
      "schema": {
        "columns": {
          "col1": {
            "dtype": "str"
          },
          "col2": {
            "dtype": "array",
            "inner_schema": {
              "expr": "Column('object', inner_schema=Schema({'col3': Column('str', default_factory=lambda x: fn.upper(fn.col('col1')))}))"
            }
          }
        }
      }
    },
    "then": {
      "data": [
        {
          "col1": "foo",
          "col2": [
            {
              "col3": "bar"
            },
            {
              "col3": "FOO"
            },
            {
              "col3": "baz"
            },
            {
              "col3": "FOO"
            }
          ],
          "errors": {}
        }
      ],
      "schema": {
        "pyspark": {
          "type": "struct",
          "fields": [
            {
              "name": "col1",
              "type": "string"
            },
            {
              "name": "col2",
              "type": {
                "type": "array",
                "elementType": {
                  "type": "struct",
                  "fields": [
                    {
                      "name": "col3",
                      "type": "string"
                    }
                  ]
                },
                "containsNull": false
              }
            },
            {
              "name": "errors",
              "nullable": false,
              "type": {
                "keyType": "string",
                "type": "map",
                "valueContainsNull": true,
                "valueType": {
                  "type": "struct",
                  "fields": [
                    {
                      "name": "details",
                      "nullable": false,
                      "type": {
                        "containsNull": true,
                        "type": "array",
                        "elementType": {
                          "type": "struct",
                          "fields": [
                            {
                              "name": "type",
                              "type": "string"
                            },
                            {
                              "name": "msg",
                              "type": "string"
                            },
                            {
                              "name": "loc",
                              "type": {
                                "containsNull": true,
                                "type": "array",
                                "elementType": "integer"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "original",
                      "type": "string"
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  }
]
